<folder version="32" name="simulations">


	<simulation name="Generic">
		<memo name="LOG"></memo>
		<clock>
			<start_date type="date" description="Enter the start date of the simulation">01/01/2005</start_date>
			<end_date type="date" description="Enter the end date of the simulation">31/12/2018</end_date>
		</clock>
		<metfile name="met">
			<filename name="filename" input="yes">met00004.met</filename>
		</metfile>
		<summaryfile />
		 <manager2 name="Script(C#)" enabled="yes">
      <ui>
        <A type="text" description="Param A">Parameter value</A>
      </ui>
      <text>using RDotNet;

using RDotNet;
using RDotNet.Internals.Unix;
using RDotNet.NativeLibrary;
using RDotNet.Internals;
using RDotNet.Devices;
using RDotNet.Dynamic;
using RDotNet.Devices;
using RDotNet.Diagnostics;
using RDotNet.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ModelFramework;
using System.ComponentModel;


public class Script
{
   [Link()] public Simulation MySimulation;
   public REngine engine = REngine.GetInstance();

   [Input] double day;
   [Input] double year;
   public Clock ck;

   // Customizable settings for run (1 and 0)
   double free = 1;
   double miyoshi = 1;
   double p = 0.05;
   double Rcov = 0; // 0 == R is diagonal matrix, independent observation errors

   // The following event handler will be called once at the beginning of the simulation
   [EventHandler] public void OnInitialised(){

      engine = Initialize(engine,  MySimulation, miyoshi, p, Rcov);

   }

   [EventHandler] public void OnPost(){

      // initialize some variables
      engine.Evaluate("specL &lt;- NULL");

      // loop through paddocks to collect info from forecast
      foreach (Paddock paddock in MySimulation.ChildPaddocks) {

         object soil = paddock.LinkByType("SoilWat");
         object soiln = paddock.LinkByType("SoilN");

         ModelFramework.Component crop = paddock.Crops[0];

         // RTM function
         engine = RTM_runner(engine, crop, ((SoilWat) soil), 20);

         // gathering information on this day's forecast
         engine = date_info(engine, day, year, MySimulation.Variable("Title").ToString());

         // reading forecast from model outputs for the day
         engine = get_model_results(engine, crop, ((SoilWat) soil), ((SoilN) soiln));

      } // end collection for each paddock


      // save CSV file if simulation is over
      if(ck.is_end_simulation){

         engine.Evaluate("write.csv(data.all, file = 'dailyOutput_"+MySimulation.Variable("Title").ToString()+".csv', row.names = FALSE)");

         engine.Dispose();

         //Console.WriteLine("ck.is_end_simulation: Type is {0}", ck.is_end_simulation.GetType());

      }

   } // End onPost()

   // Function to initialize some variables for simulation and storage
   public REngine Initialize(REngine engine, Simulation MySimulation,double miyoshi,double p,double Rcov){

      engine.Evaluate("miyoshi &lt;- " + miyoshi);
      engine.Evaluate("p &lt;- " + p);
      engine.Evaluate("Rcov &lt;- " + Rcov);

      ck = (Clock) MySimulation.LinkByName("clock");
      engine.Initialize(); // required since v1.5
      engine.Evaluate("library(hsdar)");
      engine.Evaluate("library(dplyr)");

      // defining variables for storage
      engine.Evaluate("data.all &lt;- NULL;SDA.out &lt;- list();Forecast &lt;- list(Q=NULL);Observed &lt;- list();Time &lt;- list()");
      engine.Evaluate("X &lt;- NULL;DAR &lt;- NULL;dd &lt;- NULL;R &lt;- NULL;theta &lt;- NULL");



      return engine;
   }


   // function to write adjusted values back into the model for the next forecast
   public void write_back(REngine engine, Simulation MySimulation, string[] statVars, string[] set_modules, string[] set_names,GenericVector DAResult){

      // loop over stat variables that are going to be assimilated
      for (int i = 0; i &lt; statVars.Length; i++) {

         // read the result for the first state variables
         var tmp_res = DAResult[statVars[i]].AsDataFrame();
         engine.SetSymbol("tmp_res", tmp_res);

         // now loop over ensembles and write the adjusted variables back to the model
         for (int j = 0; j &lt; MySimulation.ChildPaddocks.Count; j++) {

            // subset a row for each ensemble
            double[] row = engine.Evaluate("as.numeric(unlist(tmp_res[" + (j + 1) + ",])) ").AsNumeric().ToArray();

            Paddock paddock_set = MySimulation.ChildPaddocks[j];

            // set values based on their module
            if (set_modules[i] == "SoilN"){
               object soil_set1 = paddock_set.LinkByType("SoilN");
               ((SoilN) soil_set1).Set(set_names[i], row);

            }else if (set_modules[i] == "SoilWat"){
               object soil_set2 = paddock_set.LinkByType("SoilWat");
               ((SoilWat) soil_set2).Set(set_names[i], row);

            }
         }
      }
   }

   // function to collet model forecast results for the current time step
   public REngine get_model_results(REngine engine, ModelFramework.Component crop, SoilWat soilwc, SoilN soiln){

      // ------- Crop variables
      string[] out_vars = {"biomass","lai","yield", "swdef_photo"};
      foreach(string out_var in out_vars){
         double tmp_out = 0;
         crop.Get(out_var, out tmp_out);
         engine.Evaluate("dd$" + out_var + "&lt;-" + Math.Round(tmp_out, 2));
      }

      // ------- Soil state variables
      // Loop through all the layers and collect info on all variables

      for (int i = 0; i &lt; soilwc.dlayer.Length; i++) {

         // ------- soil temp
         engine.Evaluate("dd$st"+(i+1)+" &lt;- " + Math.Round(soiln.st[i], 2));

         // ------- soil water
         engine.Evaluate("dd$sw"+(i+1)+" &lt;- " + Math.Round(soilwc.sw[i], 2));

         // ------- soil no3
         engine.Evaluate("dd$no3_"+(i+1)+" &lt;- " + Math.Round(soiln.no3[i], 2));

				 // ------- soil no3
         engine.Evaluate("dd$oc_"+(i+1)+" &lt;- " + Math.Round(soiln.oc[i], 2));

         // ------- soil nh4
         //engine.Evaluate("dd$nh4_"+(i+1)+" &lt;- " + Math.Round(soiln.nh4[i], 2));

         // ------- total soil N
         //engine.Evaluate("dd$ntot_"+(i+1)+" &lt;- " + Math.Round(soiln.nit_tot[i], 2));

         // ------- N mineralization rates
         //engine.Evaluate("dd$nmin_"+(i+1)+" &lt;- " + Math.Round(soiln.dlt_n_min_tot[i], 2));

         // ------- soil saturated conductivity
        // engine.Evaluate("dd$ks" + (i + 1) + " &lt;- " + Math.Round(soilwc.ks[i], 2));

         // ------- soil bulk density
      //   engine.Evaluate("dd$bd" + (i + 1) + " &lt;- " + Math.Round(soilwc.bd[i], 2));

         // ------- soil saturated water flow conductivity
        // engine.Evaluate("dd$swcon" + (i + 1) + " &lt;- " + Math.Round(soilwc.swcon[i], 2));
      }

      engine.Evaluate("dd$drain &lt;- " + soilwc.drain);

      // adding info to simulation storage variables
      engine.Evaluate("dd &lt;- as.data.frame(dd)");
      engine.Evaluate("data.all &lt;- rbind(data.all, dd)");

      return engine;
   }

   // Function that couples APSIM with RTM model
   public REngine RTM_runner(REngine engine, ModelFramework.Component crop, SoilWat soilwc, int n){

      // initialize storage variables
      double lai_tmp;
      double biomass;
      double yieldc;
      double LeafGreenNConc = 0;
      double drain = 0;
      double LeafGreenWt = 0;
      double GPLA = 0;
      double biomass_wt = 0;

      // extract variables for RTM model
      crop.Get("lai", out lai_tmp);
      crop.Get("yield", out yieldc);
      crop.Get("biomass", out biomass);
      crop.Get("LeafGreenNConc", out LeafGreenNConc);
      crop.Get("LeafGreenWt", out LeafGreenWt);
      crop.Get("TPLA", out GPLA);
      crop.Get("biomass_wt", out biomass_wt);

      // estimating values for RTM model
      engine.Evaluate("sla &lt;-" + lai_tmp * 10 / (LeafGreenWt));

      // PROSAIL function will break if sla is Inf (aka if LeafGreenWt is 0)
      if (LeafGreenWt &gt; 0){
         engine.Evaluate("lai_tmp &lt;-" + lai_tmp);
         engine.Evaluate("psoil &lt;-" + soilwc.sw[1] / soilwc.sat[1]);

         // https://www.sciencedirect.com/science/article/pii/S0303243413000469
         engine.Evaluate("cab &lt;-" + ((LeafGreenNConc * LeafGreenWt) - 0.2057) / 10);
         engine.Evaluate("car &lt;- cab/4.11");
         engine.Evaluate(@"n &lt;- " + n +@"
            parameter &lt;- data.frame(N =(0.025 + (0.9*sla))/(sla-0.1),
            LAI = " + lai_tmp + @",
            Cab=cab,
            Car=car,
            Cw=runif(n,0.01,0.03),
            Cm=(1/sla/1000),
            Cbrown=runif(n,0.01,0.99),
            hspot=runif(n,0.01,.2),
            psoil=psoil
            )");

         engine.Evaluate("spectra &lt;- hsdar::PROSAIL(parameterList = parameter)");
         engine.Evaluate("temp &lt;- data.frame(vegindex(spectra, index=c('NDVI','OSAVI','EVI','Green NDVI', 'MSAVI','NDVI3')))");
         engine.Evaluate(@"dd &lt;- apply(temp, 2, mean)");
      } else{

         // here we have to add empty values so the row is the correct length
         engine.Evaluate("spectra &lt;- NULL");
         engine.Evaluate(@"dd &lt;- list(NDVI = 0, OSAVI = 0, EVI = 0, `Green NDVI`= 0, MSAVI = 0, NDVI3 = 0)");
      }

      engine.Evaluate("specL &lt;- c(specL, spectra) ");
      return engine;
   }

   // Function to get information for this time step
   public REngine date_info(REngine engine, double day, double year, string name){

      NumericVector dateinfo = engine.CreateNumericVector(new double[] {day, year});
      engine.SetSymbol("dateinfo", dateinfo);
      engine.Evaluate("dd$day &lt;-" + day);
      engine.Evaluate("dd$year &lt;-" + year);
      engine.Evaluate("dd$sim &lt;- getwd()");
      engine.Evaluate("dd$ensemble &lt;- '" +name + "'");

      engine.Evaluate("Time$Day &lt;- " + day);
      engine.Evaluate("Time$Year &lt;-" + year);
      engine.Evaluate("today &lt;- paste0(" + day + ",'-'," + year + ")");

      return engine;
   }

}

</text>
      <Reference>
        <ref type="text" description="Path to assembly:">RDotNet.dll</ref>
      </Reference>
      <Reference name="Reference1">
        <ref type="text" description="Path to assembly:">RDotNet.NativeLibrary.dll</ref>
      </Reference>
      <Reference name="Reference2">
        <ref type="text" description="Path to assembly:">DynamicInterop.dll</ref>
      </Reference>
    </manager2>
		<area name="paddock">
			<soil name="Soil">
				<Comment type="multiedit" description="Comments">ICASA Classification: Unknown</Comment>
				<ASC_Order description="Australian Soil Classification Order" />
				<ASC_Sub-order description="Australian Soil Classification Sub-Order" />
				<SoilType description="Soil description"/>
				<LocalName/>
				<Site>?</Site>
				<NearestTown description="Nearest town"/>
				<Region/>
				<State />
				<Country />
				<NaturalVegetation description="Natural vegetation"/>
				<ApsoilNumber description="Apsoil number" />
				<Latitude description="Latitude (WGS84)">?</Latitude>
				<Longitude>?</Longitude>
				<LocationAccuracy description="Location accuracy" />
				<DataSource type="multiedit" description="Data source">GSDE</DataSource>
				<Comments />
				<Water>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.41267</BD>
						<AirDry units="mm/mm">0.0834125</AirDry>
						<LL15 units="mm/mm">0.16</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.43</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.41421</BD>
						<AirDry units="mm/mm">0.0827935</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.32</DUL>
						<SAT units="mm/mm">0.4</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.42024</BD>
						<AirDry units="mm/mm">0.0828035</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.29</DUL>
						<SAT units="mm/mm">0.39</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.4443</BD>
						<AirDry units="mm/mm">0.083667</AirDry>
						<LL15 units="mm/mm">0.15</LL15>
						<DUL units="mm/mm">0.29</DUL>
						<SAT units="mm/mm">0.4</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.49911</BD>
						<AirDry units="mm/mm">0.0831325</AirDry>
						<LL15 units="mm/mm">0.14</LL15>
						<DUL units="mm/mm">0.28</DUL>
						<SAT units="mm/mm">0.42</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.5869</BD>
						<AirDry units="mm/mm">0.082538</AirDry>
						<LL15 units="mm/mm">0.15</LL15>
						<DUL units="mm/mm">0.28</DUL>
						<SAT units="mm/mm">0.37</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.64563</BD>
						<AirDry units="mm/mm">0.0729415</AirDry>
						<LL15 units="mm/mm">0.15</LL15>
						<DUL units="mm/mm">0.24</DUL>
						<SAT units="mm/mm">0.37</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.65617</BD>
						<AirDry units="mm/mm">0.060723</AirDry>
						<LL15 units="mm/mm">0.15</LL15>
						<DUL units="mm/mm">0.28</DUL>
						<SAT units="mm/mm">0.34</SAT>
					</Layer>
					<SoilCrop name="Maize">

						<Layer>
							<Thickness units="mm">45.0</Thickness>
							<LL units="mm/mm">0.16</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">46.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">75.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">123.0</Thickness>
							<LL units="mm/mm">0.15</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">204.0</Thickness>
							<LL units="mm/mm">0.14</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">336.0</Thickness>
							<LL units="mm/mm">0.15</LL>
							<KL units="/day">0.0647333333333</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">554.0</Thickness>
							<LL units="mm/mm">0.15</LL>
							<KL units="/day">0.0478</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">913.0</Thickness>
							<LL units="mm/mm">0.15</LL>
							<KL units="/day">0.02</KL>
							<XF units="0-1">1</XF>
						</Layer>
					</SoilCrop>
				</Water>
				<SoilWat>
					<SummerCona>3.5</SummerCona>
					<SummerU>5.90435</SummerU>
               <SummerDate>1-Nov</SummerDate>
					<WinterCona>3.5</WinterCona>
					<WinterU>5.90435</WinterU>
               <WinterDate>1-Apr</WinterDate>
					<DiffusConst>40</DiffusConst>
					<DiffusSlope>16</DiffusSlope>
					<Salb>0.102391</Salb>
					<Cn2Bare>74.5217</Cn2Bare>
					<CnRed>20</CnRed>
					<CnCov>0.8</CnCov>
					<Slope>
					</Slope>
					<DischargeWidth>
					</DischargeWidth>
					<CatchmentArea>
					</CatchmentArea>
					<MaxPond>
					</MaxPond>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>
				</SoilWat>
				<SoilOrganicMatter>
					<RootCn>45</RootCn>
					<RootWt>500</RootWt>
					<SoilCn>14.5</SoilCn>
					<EnrACoeff>7.4</EnrACoeff>
					<EnrBCoeff>0.2</EnrBCoeff>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<OC units="Total %"> 2.24 </OC>
						<FBiom units="0-1">0.04</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<OC units="Total %"> 2.59 </OC>
						<FBiom units="0-1">0.0357142857143</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<OC units="Total %"> 2.35 </OC>
						<FBiom units="0-1">0.0314285714286</FBiom>
						<FInert units="0-1">0.410666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<OC units="Total %"> 2.04 </OC>
						<FBiom units="0-1">0.0271428571429</FBiom>
						<FInert units="0-1">0.492666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<OC units="Total %"> 1.57 </OC>
						<FBiom units="0-1">0.0228571428571</FBiom>
						<FInert units="0-1">0.628666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<OC units="Total %"> 0.31 </OC>
						<FBiom units="0-1">0.0185714285714</FBiom>
						<FInert units="0-1">0.890833333333</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<OC units="Total %"> 0.08 </OC>
						<FBiom units="0-1">0.0142857142857</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<OC units="Total %"> 0.44 </OC>
						<FBiom units="0-1">0.01</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>
				</SoilOrganicMatter>
				<Analysis>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.44928</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.44928</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.42135</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.35321</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.22821</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.18301</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.66016</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">7.15399</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>
				</Analysis>
				<Sample name="Initial nitrogen">
					<Date type="date" description="Sample date:">01/01/2005</Date>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<NO3 units="ppm">2.24</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<NO3 units="ppm">2.59</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<NO3 units="ppm">2.35</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<NO3 units="ppm">2.04</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<NO3 units="ppm">1.57</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<NO3 units="ppm">0.31</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<NO3 units="ppm">0.08</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<NO3 units="ppm">0.44</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>
				</Sample>
        		      <InitialWater>
           		      	      <FractionFull>0.5</FractionFull>
          			      <DepthWetSoil>NaN</DepthWetSoil>
           			      <PercentMethod>EvenlyDistributed</PercentMethod>
          			      <RelativeTo>ll15</RelativeTo>
        		      </InitialWater>
			</soil>
			<surfaceom name="SurfaceOrganicMatter">
				<PoolName type="text" description="Organic Matter pool name">OrganicMatter</PoolName>
				<type type="list" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,wheat" description="Organic Matter type">Maize</type>
				<mass type="text" description="Initial surface residue (kg/ha)">500</mass>
				<cnr type="text" description="C:N ratio of initial residue">80.0</cnr>
				<standing_fraction type="text" description="Fraction of residue standing">0</standing_fraction>
			</surfaceom>
			<fertiliser />
      <irrigation name="Irrigation">
        <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">off</automatic_irrigation>
        <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
        <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.75</crit_fr_asw>
        <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
        <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
        <allocation type="text" description="Allocation in mm">10</allocation>
        <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
        <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
        <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
      </irrigation>
      <Maize>
            <ini>
               <filename>Maize.xml</filename>
            </ini>
      </Maize>
			<folder name="Manager folder">
				<operations name="Operations">
				</operations>
        <manager name="Reset">
          <ui>
            <category type="category" description="When should a reset be done" />
            <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">1-jan</reset_date>
            <category type="category" description="Reset details" />
            <soilmodule type="modulename" description="Name of your soil module : ">Soil</soilmodule>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
            <resetWater type="yesno" description="Reset soil water?">no</resetWater>
            <resetNitrogen type="yesno" description="Reset soil nitrogen?">no</resetNitrogen>
            <resetSurfaceOM type="yesno" description="Reset surface organic matter?">no</resetSurfaceOM>
          </ui>
          <script>
            <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            act_mods reseting
         endif
      </text>
            <event>start_of_day</event>
          </script>
        </manager>
  <manager name="Sow on a fixed date">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date type="text" description="Enter sowing date (dd-mmm) : ">1-may</date>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">Maize</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">9</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">B_105_biochar</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">700</row_spacing>
          </ui>
          <script>
            <text>
        if (today = date('[date]') then
              planting_date=dd_mmm_yyyy
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
            <event>start_of_day</event>
          </script>
        </manager>

        <manager name="Fertilise N at sowing">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">Maize</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">100</fert_amount_sow>
            <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">NH4NO3</fert_type_sow>
          </ui>
          <script>
            <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = [fert_depth] (mm), type = [fert_type_sow]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
        </manager>
        <manager name="Fertilise on DAS">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which crop is fertiliser being applied : ">Maize</modulename>
            <fert_das type="text" description="Enter fertiliser days after sowing  : ">45</fert_das>
            <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">100</fert_criteria>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NH4NO3</fert_type>
          </ui>
          <script>
            <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            '[fertmodule]' apply amount = [fert_criteria] (kg/ha), depth = [fert_depth] (mm), type = [fert_type] ()
         endif </text>
            <event>start_of_day</event>
          </script>
        </manager>
        <manager name="Harvesting rule">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
          </ui>
          <script>
            <text>if [crop].StageName = 'harvest_ripe'  or [crop].plant_status = 'dead' then
   [crop] harvest
   [crop] end_crop
endif
</text>
            <event>end_of_day</event>
          </script>
        </manager>
        <manager name="End crop on a fixed date">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
            <date type="text" description="Enter ending date (dd-mmm) : ">1-nov</date>
          </ui>
          <script>
            <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
            <event>end_of_day</event>
          </script>
        </manager>
			</folder>
		</area>
	</simulation>
  
	<simulation name="Generic">
		<memo name="LOG"></memo>
		<clock>
			<start_date type="date" description="Enter the start date of the simulation">01/01/2005</start_date>
			<end_date type="date" description="Enter the end date of the simulation">31/12/2018</end_date>
		</clock>
		<metfile name="met">
			<filename name="filename" input="yes">met00002.met</filename>
		</metfile>
		<summaryfile />
		 <manager2 name="Script(C#)" enabled="yes">
      <ui>
        <A type="text" description="Param A">Parameter value</A>
      </ui>
      <text>using RDotNet;

using RDotNet;
using RDotNet.Internals.Unix;
using RDotNet.NativeLibrary;
using RDotNet.Internals;
using RDotNet.Devices;
using RDotNet.Dynamic;
using RDotNet.Devices;
using RDotNet.Diagnostics;
using RDotNet.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ModelFramework;
using System.ComponentModel;


public class Script
{
   [Link()] public Simulation MySimulation;
   public REngine engine = REngine.GetInstance();

   [Input] double day;
   [Input] double year;
   public Clock ck;

   // Customizable settings for run (1 and 0)
   double free = 1;
   double miyoshi = 1;
   double p = 0.05;
   double Rcov = 0; // 0 == R is diagonal matrix, independent observation errors

   // The following event handler will be called once at the beginning of the simulation
   [EventHandler] public void OnInitialised(){

      engine = Initialize(engine,  MySimulation, miyoshi, p, Rcov);

   }

   [EventHandler] public void OnPost(){

      // initialize some variables
      engine.Evaluate("specL &lt;- NULL");

      // loop through paddocks to collect info from forecast
      foreach (Paddock paddock in MySimulation.ChildPaddocks) {

         object soil = paddock.LinkByType("SoilWat");
         object soiln = paddock.LinkByType("SoilN");

         ModelFramework.Component crop = paddock.Crops[0];

         // RTM function
         engine = RTM_runner(engine, crop, ((SoilWat) soil), 20);

         // gathering information on this day's forecast
         engine = date_info(engine, day, year, MySimulation.Variable("Title").ToString());

         // reading forecast from model outputs for the day
         engine = get_model_results(engine, crop, ((SoilWat) soil), ((SoilN) soiln));

      } // end collection for each paddock


      // save CSV file if simulation is over
      if(ck.is_end_simulation){

         engine.Evaluate("write.csv(data.all, file = 'dailyOutput_"+MySimulation.Variable("Title").ToString()+".csv', row.names = FALSE)");

         engine.Dispose();

         //Console.WriteLine("ck.is_end_simulation: Type is {0}", ck.is_end_simulation.GetType());

      }

   } // End onPost()

   // Function to initialize some variables for simulation and storage
   public REngine Initialize(REngine engine, Simulation MySimulation,double miyoshi,double p,double Rcov){

      engine.Evaluate("miyoshi &lt;- " + miyoshi);
      engine.Evaluate("p &lt;- " + p);
      engine.Evaluate("Rcov &lt;- " + Rcov);

      ck = (Clock) MySimulation.LinkByName("clock");
      engine.Initialize(); // required since v1.5
      engine.Evaluate("library(hsdar)");
      engine.Evaluate("library(dplyr)");

      // defining variables for storage
      engine.Evaluate("data.all &lt;- NULL;SDA.out &lt;- list();Forecast &lt;- list(Q=NULL);Observed &lt;- list();Time &lt;- list()");
      engine.Evaluate("X &lt;- NULL;DAR &lt;- NULL;dd &lt;- NULL;R &lt;- NULL;theta &lt;- NULL");



      return engine;
   }


   // function to write adjusted values back into the model for the next forecast
   public void write_back(REngine engine, Simulation MySimulation, string[] statVars, string[] set_modules, string[] set_names,GenericVector DAResult){

      // loop over stat variables that are going to be assimilated
      for (int i = 0; i &lt; statVars.Length; i++) {

         // read the result for the first state variables
         var tmp_res = DAResult[statVars[i]].AsDataFrame();
         engine.SetSymbol("tmp_res", tmp_res);

         // now loop over ensembles and write the adjusted variables back to the model
         for (int j = 0; j &lt; MySimulation.ChildPaddocks.Count; j++) {

            // subset a row for each ensemble
            double[] row = engine.Evaluate("as.numeric(unlist(tmp_res[" + (j + 1) + ",])) ").AsNumeric().ToArray();

            Paddock paddock_set = MySimulation.ChildPaddocks[j];

            // set values based on their module
            if (set_modules[i] == "SoilN"){
               object soil_set1 = paddock_set.LinkByType("SoilN");
               ((SoilN) soil_set1).Set(set_names[i], row);

            }else if (set_modules[i] == "SoilWat"){
               object soil_set2 = paddock_set.LinkByType("SoilWat");
               ((SoilWat) soil_set2).Set(set_names[i], row);

            }
         }
      }
   }

   // function to collet model forecast results for the current time step
   public REngine get_model_results(REngine engine, ModelFramework.Component crop, SoilWat soilwc, SoilN soiln){

      // ------- Crop variables
      string[] out_vars = {"biomass","lai","yield", "swdef_photo"};
      foreach(string out_var in out_vars){
         double tmp_out = 0;
         crop.Get(out_var, out tmp_out);
         engine.Evaluate("dd$" + out_var + "&lt;-" + Math.Round(tmp_out, 2));
      }

      // ------- Soil state variables
      // Loop through all the layers and collect info on all variables

      for (int i = 0; i &lt; soilwc.dlayer.Length; i++) {

         // ------- soil temp
         engine.Evaluate("dd$st"+(i+1)+" &lt;- " + Math.Round(soiln.st[i], 2));

         // ------- soil water
         engine.Evaluate("dd$sw"+(i+1)+" &lt;- " + Math.Round(soilwc.sw[i], 2));

         // ------- soil no3
         engine.Evaluate("dd$no3_"+(i+1)+" &lt;- " + Math.Round(soiln.no3[i], 2));

				 // ------- soil no3
         engine.Evaluate("dd$oc_"+(i+1)+" &lt;- " + Math.Round(soiln.oc[i], 2));

         // ------- soil nh4
         //engine.Evaluate("dd$nh4_"+(i+1)+" &lt;- " + Math.Round(soiln.nh4[i], 2));

         // ------- total soil N
         //engine.Evaluate("dd$ntot_"+(i+1)+" &lt;- " + Math.Round(soiln.nit_tot[i], 2));

         // ------- N mineralization rates
         //engine.Evaluate("dd$nmin_"+(i+1)+" &lt;- " + Math.Round(soiln.dlt_n_min_tot[i], 2));

         // ------- soil saturated conductivity
        // engine.Evaluate("dd$ks" + (i + 1) + " &lt;- " + Math.Round(soilwc.ks[i], 2));

         // ------- soil bulk density
      //   engine.Evaluate("dd$bd" + (i + 1) + " &lt;- " + Math.Round(soilwc.bd[i], 2));

         // ------- soil saturated water flow conductivity
        // engine.Evaluate("dd$swcon" + (i + 1) + " &lt;- " + Math.Round(soilwc.swcon[i], 2));
      }

      engine.Evaluate("dd$drain &lt;- " + soilwc.drain);

      // adding info to simulation storage variables
      engine.Evaluate("dd &lt;- as.data.frame(dd)");
      engine.Evaluate("data.all &lt;- rbind(data.all, dd)");

      return engine;
   }

   // Function that couples APSIM with RTM model
   public REngine RTM_runner(REngine engine, ModelFramework.Component crop, SoilWat soilwc, int n){

      // initialize storage variables
      double lai_tmp;
      double biomass;
      double yieldc;
      double LeafGreenNConc = 0;
      double drain = 0;
      double LeafGreenWt = 0;
      double GPLA = 0;
      double biomass_wt = 0;

      // extract variables for RTM model
      crop.Get("lai", out lai_tmp);
      crop.Get("yield", out yieldc);
      crop.Get("biomass", out biomass);
      crop.Get("LeafGreenNConc", out LeafGreenNConc);
      crop.Get("LeafGreenWt", out LeafGreenWt);
      crop.Get("TPLA", out GPLA);
      crop.Get("biomass_wt", out biomass_wt);

      // estimating values for RTM model
      engine.Evaluate("sla &lt;-" + lai_tmp * 10 / (LeafGreenWt));

      // PROSAIL function will break if sla is Inf (aka if LeafGreenWt is 0)
      if (LeafGreenWt &gt; 0){
         engine.Evaluate("lai_tmp &lt;-" + lai_tmp);
         engine.Evaluate("psoil &lt;-" + soilwc.sw[1] / soilwc.sat[1]);

         // https://www.sciencedirect.com/science/article/pii/S0303243413000469
         engine.Evaluate("cab &lt;-" + ((LeafGreenNConc * LeafGreenWt) - 0.2057) / 10);
         engine.Evaluate("car &lt;- cab/4.11");
         engine.Evaluate(@"n &lt;- " + n +@"
            parameter &lt;- data.frame(N =(0.025 + (0.9*sla))/(sla-0.1),
            LAI = " + lai_tmp + @",
            Cab=cab,
            Car=car,
            Cw=runif(n,0.01,0.03),
            Cm=(1/sla/1000),
            Cbrown=runif(n,0.01,0.99),
            hspot=runif(n,0.01,.2),
            psoil=psoil
            )");

         engine.Evaluate("spectra &lt;- hsdar::PROSAIL(parameterList = parameter)");
         engine.Evaluate("temp &lt;- data.frame(vegindex(spectra, index=c('NDVI','OSAVI','EVI','Green NDVI', 'MSAVI','NDVI3')))");
         engine.Evaluate(@"dd &lt;- apply(temp, 2, mean)");
      } else{

         // here we have to add empty values so the row is the correct length
         engine.Evaluate("spectra &lt;- NULL");
         engine.Evaluate(@"dd &lt;- list(NDVI = 0, OSAVI = 0, EVI = 0, `Green NDVI`= 0, MSAVI = 0, NDVI3 = 0)");
      }

      engine.Evaluate("specL &lt;- c(specL, spectra) ");
      return engine;
   }

   // Function to get information for this time step
   public REngine date_info(REngine engine, double day, double year, string name){

      NumericVector dateinfo = engine.CreateNumericVector(new double[] {day, year});
      engine.SetSymbol("dateinfo", dateinfo);
      engine.Evaluate("dd$day &lt;-" + day);
      engine.Evaluate("dd$year &lt;-" + year);
      engine.Evaluate("dd$sim &lt;- getwd()");
      engine.Evaluate("dd$ensemble &lt;- '" +name + "'");

      engine.Evaluate("Time$Day &lt;- " + day);
      engine.Evaluate("Time$Year &lt;-" + year);
      engine.Evaluate("today &lt;- paste0(" + day + ",'-'," + year + ")");

      return engine;
   }

}

</text>
      <Reference>
        <ref type="text" description="Path to assembly:">RDotNet.dll</ref>
      </Reference>
      <Reference name="Reference1">
        <ref type="text" description="Path to assembly:">RDotNet.NativeLibrary.dll</ref>
      </Reference>
      <Reference name="Reference2">
        <ref type="text" description="Path to assembly:">DynamicInterop.dll</ref>
      </Reference>
    </manager2>
		<area name="paddock">
			<soil name="Soil">
				<Comment type="multiedit" description="Comments">ICASA Classification: Unknown</Comment>
				<ASC_Order description="Australian Soil Classification Order" />
				<ASC_Sub-order description="Australian Soil Classification Sub-Order" />
				<SoilType description="Soil description"/>
				<LocalName/>
				<Site>?</Site>
				<NearestTown description="Nearest town"/>
				<Region/>
				<State />
				<Country />
				<NaturalVegetation description="Natural vegetation"/>
				<ApsoilNumber description="Apsoil number" />
				<Latitude description="Latitude (WGS84)">?</Latitude>
				<Longitude>?</Longitude>
				<LocationAccuracy description="Location accuracy" />
				<DataSource type="multiedit" description="Data source">GSDE</DataSource>
				<Comments />
				<Water>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.41267</BD>
						<AirDry units="mm/mm">0.0834125</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.3</DUL>
						<SAT units="mm/mm">0.44</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.41421</BD>
						<AirDry units="mm/mm">0.0827935</AirDry>
						<LL15 units="mm/mm">0.16</LL15>
						<DUL units="mm/mm">0.29</DUL>
						<SAT units="mm/mm">0.41</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.42024</BD>
						<AirDry units="mm/mm">0.0828035</AirDry>
						<LL15 units="mm/mm">0.2</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.43</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.4443</BD>
						<AirDry units="mm/mm">0.083667</AirDry>
						<LL15 units="mm/mm">0.15</LL15>
						<DUL units="mm/mm">0.34</DUL>
						<SAT units="mm/mm">0.41</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.49911</BD>
						<AirDry units="mm/mm">0.0831325</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.32</DUL>
						<SAT units="mm/mm">0.41</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.5869</BD>
						<AirDry units="mm/mm">0.082538</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.26</DUL>
						<SAT units="mm/mm">0.39</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.64563</BD>
						<AirDry units="mm/mm">0.0729415</AirDry>
						<LL15 units="mm/mm">0.12</LL15>
						<DUL units="mm/mm">0.27</DUL>
						<SAT units="mm/mm">0.36</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.65617</BD>
						<AirDry units="mm/mm">0.060723</AirDry>
						<LL15 units="mm/mm">0.14</LL15>
						<DUL units="mm/mm">0.24</DUL>
						<SAT units="mm/mm">0.33</SAT>
					</Layer>
					<SoilCrop name="Maize">

						<Layer>
							<Thickness units="mm">45.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">46.0</Thickness>
							<LL units="mm/mm">0.16</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">75.0</Thickness>
							<LL units="mm/mm">0.2</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">123.0</Thickness>
							<LL units="mm/mm">0.15</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">204.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">336.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.0647333333333</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">554.0</Thickness>
							<LL units="mm/mm">0.12</LL>
							<KL units="/day">0.0478</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">913.0</Thickness>
							<LL units="mm/mm">0.14</LL>
							<KL units="/day">0.02</KL>
							<XF units="0-1">1</XF>
						</Layer>
					</SoilCrop>
				</Water>
				<SoilWat>
					<SummerCona>3.5</SummerCona>
					<SummerU>5.90435</SummerU>
               <SummerDate>1-Nov</SummerDate>
					<WinterCona>3.5</WinterCona>
					<WinterU>5.90435</WinterU>
               <WinterDate>1-Apr</WinterDate>
					<DiffusConst>40</DiffusConst>
					<DiffusSlope>16</DiffusSlope>
					<Salb>0.102391</Salb>
					<Cn2Bare>74.5217</Cn2Bare>
					<CnRed>20</CnRed>
					<CnCov>0.8</CnCov>
					<Slope>
					</Slope>
					<DischargeWidth>
					</DischargeWidth>
					<CatchmentArea>
					</CatchmentArea>
					<MaxPond>
					</MaxPond>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>
				</SoilWat>
				<SoilOrganicMatter>
					<RootCn>45</RootCn>
					<RootWt>500</RootWt>
					<SoilCn>14.5</SoilCn>
					<EnrACoeff>7.4</EnrACoeff>
					<EnrBCoeff>0.2</EnrBCoeff>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<OC units="Total %"> 2.07 </OC>
						<FBiom units="0-1">0.04</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<OC units="Total %"> 2.26 </OC>
						<FBiom units="0-1">0.0357142857143</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<OC units="Total %"> 2.35 </OC>
						<FBiom units="0-1">0.0314285714286</FBiom>
						<FInert units="0-1">0.410666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<OC units="Total %"> 2.08 </OC>
						<FBiom units="0-1">0.0271428571429</FBiom>
						<FInert units="0-1">0.492666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<OC units="Total %"> 1.27 </OC>
						<FBiom units="0-1">0.0228571428571</FBiom>
						<FInert units="0-1">0.628666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<OC units="Total %"> 0.52 </OC>
						<FBiom units="0-1">0.0185714285714</FBiom>
						<FInert units="0-1">0.890833333333</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<OC units="Total %"> 0.26 </OC>
						<FBiom units="0-1">0.0142857142857</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<OC units="Total %"> 0.41 </OC>
						<FBiom units="0-1">0.01</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>
				</SoilOrganicMatter>
				<Analysis>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.44928</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.44928</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.42135</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.35321</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.22821</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.18301</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.66016</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">7.15399</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>
				</Analysis>
				<Sample name="Initial nitrogen">
					<Date type="date" description="Sample date:">01/01/2005</Date>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<NO3 units="ppm">2.07</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<NO3 units="ppm">2.26</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<NO3 units="ppm">2.35</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<NO3 units="ppm">2.08</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<NO3 units="ppm">1.27</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<NO3 units="ppm">0.52</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<NO3 units="ppm">0.26</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<NO3 units="ppm">0.41</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>
				</Sample>
        		      <InitialWater>
           		      	      <FractionFull>0.5</FractionFull>
          			      <DepthWetSoil>NaN</DepthWetSoil>
           			      <PercentMethod>EvenlyDistributed</PercentMethod>
          			      <RelativeTo>ll15</RelativeTo>
        		      </InitialWater>
			</soil>
			<surfaceom name="SurfaceOrganicMatter">
				<PoolName type="text" description="Organic Matter pool name">OrganicMatter</PoolName>
				<type type="list" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,wheat" description="Organic Matter type">Maize</type>
				<mass type="text" description="Initial surface residue (kg/ha)">500</mass>
				<cnr type="text" description="C:N ratio of initial residue">80.0</cnr>
				<standing_fraction type="text" description="Fraction of residue standing">0</standing_fraction>
			</surfaceom>
			<fertiliser />
      <irrigation name="Irrigation">
        <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">off</automatic_irrigation>
        <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
        <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.75</crit_fr_asw>
        <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
        <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
        <allocation type="text" description="Allocation in mm">10</allocation>
        <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
        <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
        <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
      </irrigation>
      <Maize>
            <ini>
               <filename>Maize.xml</filename>
            </ini>
      </Maize>
			<folder name="Manager folder">
				<operations name="Operations">
				</operations>
        <manager name="Reset">
          <ui>
            <category type="category" description="When should a reset be done" />
            <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">1-jan</reset_date>
            <category type="category" description="Reset details" />
            <soilmodule type="modulename" description="Name of your soil module : ">Soil</soilmodule>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
            <resetWater type="yesno" description="Reset soil water?">no</resetWater>
            <resetNitrogen type="yesno" description="Reset soil nitrogen?">no</resetNitrogen>
            <resetSurfaceOM type="yesno" description="Reset surface organic matter?">no</resetSurfaceOM>
          </ui>
          <script>
            <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            act_mods reseting
         endif
      </text>
            <event>start_of_day</event>
          </script>
        </manager>
  <manager name="Sow on a fixed date">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date type="text" description="Enter sowing date (dd-mmm) : ">1-may</date>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">Maize</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">9</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">B_105_biochar</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">700</row_spacing>
          </ui>
          <script>
            <text>
        if (today = date('[date]') then
              planting_date=dd_mmm_yyyy
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
            <event>start_of_day</event>
          </script>
        </manager>

        <manager name="Fertilise N at sowing">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">Maize</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">100</fert_amount_sow>
            <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">NH4NO3</fert_type_sow>
          </ui>
          <script>
            <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = [fert_depth] (mm), type = [fert_type_sow]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
        </manager>
        <manager name="Fertilise on DAS">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which crop is fertiliser being applied : ">Maize</modulename>
            <fert_das type="text" description="Enter fertiliser days after sowing  : ">45</fert_das>
            <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">100</fert_criteria>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NH4NO3</fert_type>
          </ui>
          <script>
            <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            '[fertmodule]' apply amount = [fert_criteria] (kg/ha), depth = [fert_depth] (mm), type = [fert_type] ()
         endif </text>
            <event>start_of_day</event>
          </script>
        </manager>
        <manager name="Harvesting rule">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
          </ui>
          <script>
            <text>if [crop].StageName = 'harvest_ripe'  or [crop].plant_status = 'dead' then
   [crop] harvest
   [crop] end_crop
endif
</text>
            <event>end_of_day</event>
          </script>
        </manager>
        <manager name="End crop on a fixed date">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
            <date type="text" description="Enter ending date (dd-mmm) : ">1-nov</date>
          </ui>
          <script>
            <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
            <event>end_of_day</event>
          </script>
        </manager>
			</folder>
		</area>
	</simulation>
  
	<simulation name="Generic">
		<memo name="LOG"></memo>
		<clock>
			<start_date type="date" description="Enter the start date of the simulation">01/01/2005</start_date>
			<end_date type="date" description="Enter the end date of the simulation">31/12/2018</end_date>
		</clock>
		<metfile name="met">
			<filename name="filename" input="yes">met00008.met</filename>
		</metfile>
		<summaryfile />
		 <manager2 name="Script(C#)" enabled="yes">
      <ui>
        <A type="text" description="Param A">Parameter value</A>
      </ui>
      <text>using RDotNet;

using RDotNet;
using RDotNet.Internals.Unix;
using RDotNet.NativeLibrary;
using RDotNet.Internals;
using RDotNet.Devices;
using RDotNet.Dynamic;
using RDotNet.Devices;
using RDotNet.Diagnostics;
using RDotNet.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ModelFramework;
using System.ComponentModel;


public class Script
{
   [Link()] public Simulation MySimulation;
   public REngine engine = REngine.GetInstance();

   [Input] double day;
   [Input] double year;
   public Clock ck;

   // Customizable settings for run (1 and 0)
   double free = 1;
   double miyoshi = 1;
   double p = 0.05;
   double Rcov = 0; // 0 == R is diagonal matrix, independent observation errors

   // The following event handler will be called once at the beginning of the simulation
   [EventHandler] public void OnInitialised(){

      engine = Initialize(engine,  MySimulation, miyoshi, p, Rcov);

   }

   [EventHandler] public void OnPost(){

      // initialize some variables
      engine.Evaluate("specL &lt;- NULL");

      // loop through paddocks to collect info from forecast
      foreach (Paddock paddock in MySimulation.ChildPaddocks) {

         object soil = paddock.LinkByType("SoilWat");
         object soiln = paddock.LinkByType("SoilN");

         ModelFramework.Component crop = paddock.Crops[0];

         // RTM function
         engine = RTM_runner(engine, crop, ((SoilWat) soil), 20);

         // gathering information on this day's forecast
         engine = date_info(engine, day, year, MySimulation.Variable("Title").ToString());

         // reading forecast from model outputs for the day
         engine = get_model_results(engine, crop, ((SoilWat) soil), ((SoilN) soiln));

      } // end collection for each paddock


      // save CSV file if simulation is over
      if(ck.is_end_simulation){

         engine.Evaluate("write.csv(data.all, file = 'dailyOutput_"+MySimulation.Variable("Title").ToString()+".csv', row.names = FALSE)");

         engine.Dispose();

         //Console.WriteLine("ck.is_end_simulation: Type is {0}", ck.is_end_simulation.GetType());

      }

   } // End onPost()

   // Function to initialize some variables for simulation and storage
   public REngine Initialize(REngine engine, Simulation MySimulation,double miyoshi,double p,double Rcov){

      engine.Evaluate("miyoshi &lt;- " + miyoshi);
      engine.Evaluate("p &lt;- " + p);
      engine.Evaluate("Rcov &lt;- " + Rcov);

      ck = (Clock) MySimulation.LinkByName("clock");
      engine.Initialize(); // required since v1.5
      engine.Evaluate("library(hsdar)");
      engine.Evaluate("library(dplyr)");

      // defining variables for storage
      engine.Evaluate("data.all &lt;- NULL;SDA.out &lt;- list();Forecast &lt;- list(Q=NULL);Observed &lt;- list();Time &lt;- list()");
      engine.Evaluate("X &lt;- NULL;DAR &lt;- NULL;dd &lt;- NULL;R &lt;- NULL;theta &lt;- NULL");



      return engine;
   }


   // function to write adjusted values back into the model for the next forecast
   public void write_back(REngine engine, Simulation MySimulation, string[] statVars, string[] set_modules, string[] set_names,GenericVector DAResult){

      // loop over stat variables that are going to be assimilated
      for (int i = 0; i &lt; statVars.Length; i++) {

         // read the result for the first state variables
         var tmp_res = DAResult[statVars[i]].AsDataFrame();
         engine.SetSymbol("tmp_res", tmp_res);

         // now loop over ensembles and write the adjusted variables back to the model
         for (int j = 0; j &lt; MySimulation.ChildPaddocks.Count; j++) {

            // subset a row for each ensemble
            double[] row = engine.Evaluate("as.numeric(unlist(tmp_res[" + (j + 1) + ",])) ").AsNumeric().ToArray();

            Paddock paddock_set = MySimulation.ChildPaddocks[j];

            // set values based on their module
            if (set_modules[i] == "SoilN"){
               object soil_set1 = paddock_set.LinkByType("SoilN");
               ((SoilN) soil_set1).Set(set_names[i], row);

            }else if (set_modules[i] == "SoilWat"){
               object soil_set2 = paddock_set.LinkByType("SoilWat");
               ((SoilWat) soil_set2).Set(set_names[i], row);

            }
         }
      }
   }

   // function to collet model forecast results for the current time step
   public REngine get_model_results(REngine engine, ModelFramework.Component crop, SoilWat soilwc, SoilN soiln){

      // ------- Crop variables
      string[] out_vars = {"biomass","lai","yield", "swdef_photo"};
      foreach(string out_var in out_vars){
         double tmp_out = 0;
         crop.Get(out_var, out tmp_out);
         engine.Evaluate("dd$" + out_var + "&lt;-" + Math.Round(tmp_out, 2));
      }

      // ------- Soil state variables
      // Loop through all the layers and collect info on all variables

      for (int i = 0; i &lt; soilwc.dlayer.Length; i++) {

         // ------- soil temp
         engine.Evaluate("dd$st"+(i+1)+" &lt;- " + Math.Round(soiln.st[i], 2));

         // ------- soil water
         engine.Evaluate("dd$sw"+(i+1)+" &lt;- " + Math.Round(soilwc.sw[i], 2));

         // ------- soil no3
         engine.Evaluate("dd$no3_"+(i+1)+" &lt;- " + Math.Round(soiln.no3[i], 2));

				 // ------- soil no3
         engine.Evaluate("dd$oc_"+(i+1)+" &lt;- " + Math.Round(soiln.oc[i], 2));

         // ------- soil nh4
         //engine.Evaluate("dd$nh4_"+(i+1)+" &lt;- " + Math.Round(soiln.nh4[i], 2));

         // ------- total soil N
         //engine.Evaluate("dd$ntot_"+(i+1)+" &lt;- " + Math.Round(soiln.nit_tot[i], 2));

         // ------- N mineralization rates
         //engine.Evaluate("dd$nmin_"+(i+1)+" &lt;- " + Math.Round(soiln.dlt_n_min_tot[i], 2));

         // ------- soil saturated conductivity
        // engine.Evaluate("dd$ks" + (i + 1) + " &lt;- " + Math.Round(soilwc.ks[i], 2));

         // ------- soil bulk density
      //   engine.Evaluate("dd$bd" + (i + 1) + " &lt;- " + Math.Round(soilwc.bd[i], 2));

         // ------- soil saturated water flow conductivity
        // engine.Evaluate("dd$swcon" + (i + 1) + " &lt;- " + Math.Round(soilwc.swcon[i], 2));
      }

      engine.Evaluate("dd$drain &lt;- " + soilwc.drain);

      // adding info to simulation storage variables
      engine.Evaluate("dd &lt;- as.data.frame(dd)");
      engine.Evaluate("data.all &lt;- rbind(data.all, dd)");

      return engine;
   }

   // Function that couples APSIM with RTM model
   public REngine RTM_runner(REngine engine, ModelFramework.Component crop, SoilWat soilwc, int n){

      // initialize storage variables
      double lai_tmp;
      double biomass;
      double yieldc;
      double LeafGreenNConc = 0;
      double drain = 0;
      double LeafGreenWt = 0;
      double GPLA = 0;
      double biomass_wt = 0;

      // extract variables for RTM model
      crop.Get("lai", out lai_tmp);
      crop.Get("yield", out yieldc);
      crop.Get("biomass", out biomass);
      crop.Get("LeafGreenNConc", out LeafGreenNConc);
      crop.Get("LeafGreenWt", out LeafGreenWt);
      crop.Get("TPLA", out GPLA);
      crop.Get("biomass_wt", out biomass_wt);

      // estimating values for RTM model
      engine.Evaluate("sla &lt;-" + lai_tmp * 10 / (LeafGreenWt));

      // PROSAIL function will break if sla is Inf (aka if LeafGreenWt is 0)
      if (LeafGreenWt &gt; 0){
         engine.Evaluate("lai_tmp &lt;-" + lai_tmp);
         engine.Evaluate("psoil &lt;-" + soilwc.sw[1] / soilwc.sat[1]);

         // https://www.sciencedirect.com/science/article/pii/S0303243413000469
         engine.Evaluate("cab &lt;-" + ((LeafGreenNConc * LeafGreenWt) - 0.2057) / 10);
         engine.Evaluate("car &lt;- cab/4.11");
         engine.Evaluate(@"n &lt;- " + n +@"
            parameter &lt;- data.frame(N =(0.025 + (0.9*sla))/(sla-0.1),
            LAI = " + lai_tmp + @",
            Cab=cab,
            Car=car,
            Cw=runif(n,0.01,0.03),
            Cm=(1/sla/1000),
            Cbrown=runif(n,0.01,0.99),
            hspot=runif(n,0.01,.2),
            psoil=psoil
            )");

         engine.Evaluate("spectra &lt;- hsdar::PROSAIL(parameterList = parameter)");
         engine.Evaluate("temp &lt;- data.frame(vegindex(spectra, index=c('NDVI','OSAVI','EVI','Green NDVI', 'MSAVI','NDVI3')))");
         engine.Evaluate(@"dd &lt;- apply(temp, 2, mean)");
      } else{

         // here we have to add empty values so the row is the correct length
         engine.Evaluate("spectra &lt;- NULL");
         engine.Evaluate(@"dd &lt;- list(NDVI = 0, OSAVI = 0, EVI = 0, `Green NDVI`= 0, MSAVI = 0, NDVI3 = 0)");
      }

      engine.Evaluate("specL &lt;- c(specL, spectra) ");
      return engine;
   }

   // Function to get information for this time step
   public REngine date_info(REngine engine, double day, double year, string name){

      NumericVector dateinfo = engine.CreateNumericVector(new double[] {day, year});
      engine.SetSymbol("dateinfo", dateinfo);
      engine.Evaluate("dd$day &lt;-" + day);
      engine.Evaluate("dd$year &lt;-" + year);
      engine.Evaluate("dd$sim &lt;- getwd()");
      engine.Evaluate("dd$ensemble &lt;- '" +name + "'");

      engine.Evaluate("Time$Day &lt;- " + day);
      engine.Evaluate("Time$Year &lt;-" + year);
      engine.Evaluate("today &lt;- paste0(" + day + ",'-'," + year + ")");

      return engine;
   }

}

</text>
      <Reference>
        <ref type="text" description="Path to assembly:">RDotNet.dll</ref>
      </Reference>
      <Reference name="Reference1">
        <ref type="text" description="Path to assembly:">RDotNet.NativeLibrary.dll</ref>
      </Reference>
      <Reference name="Reference2">
        <ref type="text" description="Path to assembly:">DynamicInterop.dll</ref>
      </Reference>
    </manager2>
		<area name="paddock">
			<soil name="Soil">
				<Comment type="multiedit" description="Comments">ICASA Classification: Unknown</Comment>
				<ASC_Order description="Australian Soil Classification Order" />
				<ASC_Sub-order description="Australian Soil Classification Sub-Order" />
				<SoilType description="Soil description"/>
				<LocalName/>
				<Site>?</Site>
				<NearestTown description="Nearest town"/>
				<Region/>
				<State />
				<Country />
				<NaturalVegetation description="Natural vegetation"/>
				<ApsoilNumber description="Apsoil number" />
				<Latitude description="Latitude (WGS84)">?</Latitude>
				<Longitude>?</Longitude>
				<LocationAccuracy description="Location accuracy" />
				<DataSource type="multiedit" description="Data source">GSDE</DataSource>
				<Comments />
				<Water>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.39672</BD>
						<AirDry units="mm/mm">0.090486</AirDry>
						<LL15 units="mm/mm">0.18</LL15>
						<DUL units="mm/mm">0.35</DUL>
						<SAT units="mm/mm">0.46</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.49295</BD>
						<AirDry units="mm/mm">0.0910395</AirDry>
						<LL15 units="mm/mm">0.22</LL15>
						<DUL units="mm/mm">0.36</DUL>
						<SAT units="mm/mm">0.45</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.48965</BD>
						<AirDry units="mm/mm">0.0930985</AirDry>
						<LL15 units="mm/mm">0.18</LL15>
						<DUL units="mm/mm">0.37</DUL>
						<SAT units="mm/mm">0.48</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.48965</BD>
						<AirDry units="mm/mm">0.0930985</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.42</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.55271</BD>
						<AirDry units="mm/mm">0.096227</AirDry>
						<LL15 units="mm/mm">0.19</LL15>
						<DUL units="mm/mm">0.38</DUL>
						<SAT units="mm/mm">0.45</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.60117</BD>
						<AirDry units="mm/mm">0.096355</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.38</DUL>
						<SAT units="mm/mm">0.46</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.64153</BD>
						<AirDry units="mm/mm">0.08919</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.45</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.64153</BD>
						<AirDry units="mm/mm">0.08919</AirDry>
						<LL15 units="mm/mm">0.13</LL15>
						<DUL units="mm/mm">0.38</DUL>
						<SAT units="mm/mm">0.44</SAT>
					</Layer>
					<SoilCrop name="Maize">

						<Layer>
							<Thickness units="mm">45.0</Thickness>
							<LL units="mm/mm">0.18</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">46.0</Thickness>
							<LL units="mm/mm">0.22</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">75.0</Thickness>
							<LL units="mm/mm">0.18</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">123.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">204.0</Thickness>
							<LL units="mm/mm">0.19</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">336.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.0647333333333</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">554.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.0478</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">913.0</Thickness>
							<LL units="mm/mm">0.13</LL>
							<KL units="/day">0.02</KL>
							<XF units="0-1">1</XF>
						</Layer>
					</SoilCrop>
				</Water>
				<SoilWat>
					<SummerCona>3.5</SummerCona>
					<SummerU>5.90435</SummerU>
               <SummerDate>1-Nov</SummerDate>
					<WinterCona>3.5</WinterCona>
					<WinterU>5.90435</WinterU>
               <WinterDate>1-Apr</WinterDate>
					<DiffusConst>40</DiffusConst>
					<DiffusSlope>16</DiffusSlope>
					<Salb>0.102391</Salb>
					<Cn2Bare>74.5217</Cn2Bare>
					<CnRed>20</CnRed>
					<CnCov>0.8</CnCov>
					<Slope>
					</Slope>
					<DischargeWidth>
					</DischargeWidth>
					<CatchmentArea>
					</CatchmentArea>
					<MaxPond>
					</MaxPond>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>
				</SoilWat>
				<SoilOrganicMatter>
					<RootCn>45</RootCn>
					<RootWt>500</RootWt>
					<SoilCn>14.5</SoilCn>
					<EnrACoeff>7.4</EnrACoeff>
					<EnrBCoeff>0.2</EnrBCoeff>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<OC units="Total %"> 3.4 </OC>
						<FBiom units="0-1">0.04</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<OC units="Total %"> 2.45 </OC>
						<FBiom units="0-1">0.0357142857143</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<OC units="Total %"> 1.52 </OC>
						<FBiom units="0-1">0.0314285714286</FBiom>
						<FInert units="0-1">0.410666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<OC units="Total %"> 1.57 </OC>
						<FBiom units="0-1">0.0271428571429</FBiom>
						<FInert units="0-1">0.492666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<OC units="Total %"> 0.99 </OC>
						<FBiom units="0-1">0.0228571428571</FBiom>
						<FInert units="0-1">0.628666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<OC units="Total %"> 0.55 </OC>
						<FBiom units="0-1">0.0185714285714</FBiom>
						<FInert units="0-1">0.890833333333</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<OC units="Total %"> 0.28 </OC>
						<FBiom units="0-1">0.0142857142857</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<OC units="Total %"> 0.53 </OC>
						<FBiom units="0-1">0.01</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>
				</SoilOrganicMatter>
				<Analysis>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.17768</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.14965</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.07985</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.07985</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.05539</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.24542</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.84574</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.84574</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>
				</Analysis>
				<Sample name="Initial nitrogen">
					<Date type="date" description="Sample date:">01/01/2005</Date>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<NO3 units="ppm">3.4</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<NO3 units="ppm">2.45</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<NO3 units="ppm">1.52</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<NO3 units="ppm">1.57</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<NO3 units="ppm">0.99</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<NO3 units="ppm">0.55</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<NO3 units="ppm">0.28</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<NO3 units="ppm">0.53</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>
				</Sample>
        		      <InitialWater>
           		      	      <FractionFull>0.5</FractionFull>
          			      <DepthWetSoil>NaN</DepthWetSoil>
           			      <PercentMethod>EvenlyDistributed</PercentMethod>
          			      <RelativeTo>ll15</RelativeTo>
        		      </InitialWater>
			</soil>
			<surfaceom name="SurfaceOrganicMatter">
				<PoolName type="text" description="Organic Matter pool name">OrganicMatter</PoolName>
				<type type="list" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,wheat" description="Organic Matter type">Maize</type>
				<mass type="text" description="Initial surface residue (kg/ha)">500</mass>
				<cnr type="text" description="C:N ratio of initial residue">80.0</cnr>
				<standing_fraction type="text" description="Fraction of residue standing">0</standing_fraction>
			</surfaceom>
			<fertiliser />
      <irrigation name="Irrigation">
        <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">off</automatic_irrigation>
        <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
        <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.75</crit_fr_asw>
        <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
        <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
        <allocation type="text" description="Allocation in mm">10</allocation>
        <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
        <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
        <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
      </irrigation>
      <Maize>
            <ini>
               <filename>Maize.xml</filename>
            </ini>
      </Maize>
			<folder name="Manager folder">
				<operations name="Operations">
				</operations>
        <manager name="Reset">
          <ui>
            <category type="category" description="When should a reset be done" />
            <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">1-jan</reset_date>
            <category type="category" description="Reset details" />
            <soilmodule type="modulename" description="Name of your soil module : ">Soil</soilmodule>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
            <resetWater type="yesno" description="Reset soil water?">no</resetWater>
            <resetNitrogen type="yesno" description="Reset soil nitrogen?">no</resetNitrogen>
            <resetSurfaceOM type="yesno" description="Reset surface organic matter?">no</resetSurfaceOM>
          </ui>
          <script>
            <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            act_mods reseting
         endif
      </text>
            <event>start_of_day</event>
          </script>
        </manager>
  <manager name="Sow on a fixed date">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date type="text" description="Enter sowing date (dd-mmm) : ">1-may</date>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">Maize</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">9</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">B_105_biochar</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">700</row_spacing>
          </ui>
          <script>
            <text>
        if (today = date('[date]') then
              planting_date=dd_mmm_yyyy
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
            <event>start_of_day</event>
          </script>
        </manager>

        <manager name="Fertilise N at sowing">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">Maize</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">100</fert_amount_sow>
            <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">NH4NO3</fert_type_sow>
          </ui>
          <script>
            <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = [fert_depth] (mm), type = [fert_type_sow]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
        </manager>
        <manager name="Fertilise on DAS">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which crop is fertiliser being applied : ">Maize</modulename>
            <fert_das type="text" description="Enter fertiliser days after sowing  : ">45</fert_das>
            <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">100</fert_criteria>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NH4NO3</fert_type>
          </ui>
          <script>
            <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            '[fertmodule]' apply amount = [fert_criteria] (kg/ha), depth = [fert_depth] (mm), type = [fert_type] ()
         endif </text>
            <event>start_of_day</event>
          </script>
        </manager>
        <manager name="Harvesting rule">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
          </ui>
          <script>
            <text>if [crop].StageName = 'harvest_ripe'  or [crop].plant_status = 'dead' then
   [crop] harvest
   [crop] end_crop
endif
</text>
            <event>end_of_day</event>
          </script>
        </manager>
        <manager name="End crop on a fixed date">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
            <date type="text" description="Enter ending date (dd-mmm) : ">1-nov</date>
          </ui>
          <script>
            <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
            <event>end_of_day</event>
          </script>
        </manager>
			</folder>
		</area>
	</simulation>
  
	<simulation name="Generic">
		<memo name="LOG"></memo>
		<clock>
			<start_date type="date" description="Enter the start date of the simulation">01/01/2005</start_date>
			<end_date type="date" description="Enter the end date of the simulation">31/12/2018</end_date>
		</clock>
		<metfile name="met">
			<filename name="filename" input="yes">met00001.met</filename>
		</metfile>
		<summaryfile />
		 <manager2 name="Script(C#)" enabled="yes">
      <ui>
        <A type="text" description="Param A">Parameter value</A>
      </ui>
      <text>using RDotNet;

using RDotNet;
using RDotNet.Internals.Unix;
using RDotNet.NativeLibrary;
using RDotNet.Internals;
using RDotNet.Devices;
using RDotNet.Dynamic;
using RDotNet.Devices;
using RDotNet.Diagnostics;
using RDotNet.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ModelFramework;
using System.ComponentModel;


public class Script
{
   [Link()] public Simulation MySimulation;
   public REngine engine = REngine.GetInstance();

   [Input] double day;
   [Input] double year;
   public Clock ck;

   // Customizable settings for run (1 and 0)
   double free = 1;
   double miyoshi = 1;
   double p = 0.05;
   double Rcov = 0; // 0 == R is diagonal matrix, independent observation errors

   // The following event handler will be called once at the beginning of the simulation
   [EventHandler] public void OnInitialised(){

      engine = Initialize(engine,  MySimulation, miyoshi, p, Rcov);

   }

   [EventHandler] public void OnPost(){

      // initialize some variables
      engine.Evaluate("specL &lt;- NULL");

      // loop through paddocks to collect info from forecast
      foreach (Paddock paddock in MySimulation.ChildPaddocks) {

         object soil = paddock.LinkByType("SoilWat");
         object soiln = paddock.LinkByType("SoilN");

         ModelFramework.Component crop = paddock.Crops[0];

         // RTM function
         engine = RTM_runner(engine, crop, ((SoilWat) soil), 20);

         // gathering information on this day's forecast
         engine = date_info(engine, day, year, MySimulation.Variable("Title").ToString());

         // reading forecast from model outputs for the day
         engine = get_model_results(engine, crop, ((SoilWat) soil), ((SoilN) soiln));

      } // end collection for each paddock


      // save CSV file if simulation is over
      if(ck.is_end_simulation){

         engine.Evaluate("write.csv(data.all, file = 'dailyOutput_"+MySimulation.Variable("Title").ToString()+".csv', row.names = FALSE)");

         engine.Dispose();

         //Console.WriteLine("ck.is_end_simulation: Type is {0}", ck.is_end_simulation.GetType());

      }

   } // End onPost()

   // Function to initialize some variables for simulation and storage
   public REngine Initialize(REngine engine, Simulation MySimulation,double miyoshi,double p,double Rcov){

      engine.Evaluate("miyoshi &lt;- " + miyoshi);
      engine.Evaluate("p &lt;- " + p);
      engine.Evaluate("Rcov &lt;- " + Rcov);

      ck = (Clock) MySimulation.LinkByName("clock");
      engine.Initialize(); // required since v1.5
      engine.Evaluate("library(hsdar)");
      engine.Evaluate("library(dplyr)");

      // defining variables for storage
      engine.Evaluate("data.all &lt;- NULL;SDA.out &lt;- list();Forecast &lt;- list(Q=NULL);Observed &lt;- list();Time &lt;- list()");
      engine.Evaluate("X &lt;- NULL;DAR &lt;- NULL;dd &lt;- NULL;R &lt;- NULL;theta &lt;- NULL");



      return engine;
   }


   // function to write adjusted values back into the model for the next forecast
   public void write_back(REngine engine, Simulation MySimulation, string[] statVars, string[] set_modules, string[] set_names,GenericVector DAResult){

      // loop over stat variables that are going to be assimilated
      for (int i = 0; i &lt; statVars.Length; i++) {

         // read the result for the first state variables
         var tmp_res = DAResult[statVars[i]].AsDataFrame();
         engine.SetSymbol("tmp_res", tmp_res);

         // now loop over ensembles and write the adjusted variables back to the model
         for (int j = 0; j &lt; MySimulation.ChildPaddocks.Count; j++) {

            // subset a row for each ensemble
            double[] row = engine.Evaluate("as.numeric(unlist(tmp_res[" + (j + 1) + ",])) ").AsNumeric().ToArray();

            Paddock paddock_set = MySimulation.ChildPaddocks[j];

            // set values based on their module
            if (set_modules[i] == "SoilN"){
               object soil_set1 = paddock_set.LinkByType("SoilN");
               ((SoilN) soil_set1).Set(set_names[i], row);

            }else if (set_modules[i] == "SoilWat"){
               object soil_set2 = paddock_set.LinkByType("SoilWat");
               ((SoilWat) soil_set2).Set(set_names[i], row);

            }
         }
      }
   }

   // function to collet model forecast results for the current time step
   public REngine get_model_results(REngine engine, ModelFramework.Component crop, SoilWat soilwc, SoilN soiln){

      // ------- Crop variables
      string[] out_vars = {"biomass","lai","yield", "swdef_photo"};
      foreach(string out_var in out_vars){
         double tmp_out = 0;
         crop.Get(out_var, out tmp_out);
         engine.Evaluate("dd$" + out_var + "&lt;-" + Math.Round(tmp_out, 2));
      }

      // ------- Soil state variables
      // Loop through all the layers and collect info on all variables

      for (int i = 0; i &lt; soilwc.dlayer.Length; i++) {

         // ------- soil temp
         engine.Evaluate("dd$st"+(i+1)+" &lt;- " + Math.Round(soiln.st[i], 2));

         // ------- soil water
         engine.Evaluate("dd$sw"+(i+1)+" &lt;- " + Math.Round(soilwc.sw[i], 2));

         // ------- soil no3
         engine.Evaluate("dd$no3_"+(i+1)+" &lt;- " + Math.Round(soiln.no3[i], 2));

				 // ------- soil no3
         engine.Evaluate("dd$oc_"+(i+1)+" &lt;- " + Math.Round(soiln.oc[i], 2));

         // ------- soil nh4
         //engine.Evaluate("dd$nh4_"+(i+1)+" &lt;- " + Math.Round(soiln.nh4[i], 2));

         // ------- total soil N
         //engine.Evaluate("dd$ntot_"+(i+1)+" &lt;- " + Math.Round(soiln.nit_tot[i], 2));

         // ------- N mineralization rates
         //engine.Evaluate("dd$nmin_"+(i+1)+" &lt;- " + Math.Round(soiln.dlt_n_min_tot[i], 2));

         // ------- soil saturated conductivity
        // engine.Evaluate("dd$ks" + (i + 1) + " &lt;- " + Math.Round(soilwc.ks[i], 2));

         // ------- soil bulk density
      //   engine.Evaluate("dd$bd" + (i + 1) + " &lt;- " + Math.Round(soilwc.bd[i], 2));

         // ------- soil saturated water flow conductivity
        // engine.Evaluate("dd$swcon" + (i + 1) + " &lt;- " + Math.Round(soilwc.swcon[i], 2));
      }

      engine.Evaluate("dd$drain &lt;- " + soilwc.drain);

      // adding info to simulation storage variables
      engine.Evaluate("dd &lt;- as.data.frame(dd)");
      engine.Evaluate("data.all &lt;- rbind(data.all, dd)");

      return engine;
   }

   // Function that couples APSIM with RTM model
   public REngine RTM_runner(REngine engine, ModelFramework.Component crop, SoilWat soilwc, int n){

      // initialize storage variables
      double lai_tmp;
      double biomass;
      double yieldc;
      double LeafGreenNConc = 0;
      double drain = 0;
      double LeafGreenWt = 0;
      double GPLA = 0;
      double biomass_wt = 0;

      // extract variables for RTM model
      crop.Get("lai", out lai_tmp);
      crop.Get("yield", out yieldc);
      crop.Get("biomass", out biomass);
      crop.Get("LeafGreenNConc", out LeafGreenNConc);
      crop.Get("LeafGreenWt", out LeafGreenWt);
      crop.Get("TPLA", out GPLA);
      crop.Get("biomass_wt", out biomass_wt);

      // estimating values for RTM model
      engine.Evaluate("sla &lt;-" + lai_tmp * 10 / (LeafGreenWt));

      // PROSAIL function will break if sla is Inf (aka if LeafGreenWt is 0)
      if (LeafGreenWt &gt; 0){
         engine.Evaluate("lai_tmp &lt;-" + lai_tmp);
         engine.Evaluate("psoil &lt;-" + soilwc.sw[1] / soilwc.sat[1]);

         // https://www.sciencedirect.com/science/article/pii/S0303243413000469
         engine.Evaluate("cab &lt;-" + ((LeafGreenNConc * LeafGreenWt) - 0.2057) / 10);
         engine.Evaluate("car &lt;- cab/4.11");
         engine.Evaluate(@"n &lt;- " + n +@"
            parameter &lt;- data.frame(N =(0.025 + (0.9*sla))/(sla-0.1),
            LAI = " + lai_tmp + @",
            Cab=cab,
            Car=car,
            Cw=runif(n,0.01,0.03),
            Cm=(1/sla/1000),
            Cbrown=runif(n,0.01,0.99),
            hspot=runif(n,0.01,.2),
            psoil=psoil
            )");

         engine.Evaluate("spectra &lt;- hsdar::PROSAIL(parameterList = parameter)");
         engine.Evaluate("temp &lt;- data.frame(vegindex(spectra, index=c('NDVI','OSAVI','EVI','Green NDVI', 'MSAVI','NDVI3')))");
         engine.Evaluate(@"dd &lt;- apply(temp, 2, mean)");
      } else{

         // here we have to add empty values so the row is the correct length
         engine.Evaluate("spectra &lt;- NULL");
         engine.Evaluate(@"dd &lt;- list(NDVI = 0, OSAVI = 0, EVI = 0, `Green NDVI`= 0, MSAVI = 0, NDVI3 = 0)");
      }

      engine.Evaluate("specL &lt;- c(specL, spectra) ");
      return engine;
   }

   // Function to get information for this time step
   public REngine date_info(REngine engine, double day, double year, string name){

      NumericVector dateinfo = engine.CreateNumericVector(new double[] {day, year});
      engine.SetSymbol("dateinfo", dateinfo);
      engine.Evaluate("dd$day &lt;-" + day);
      engine.Evaluate("dd$year &lt;-" + year);
      engine.Evaluate("dd$sim &lt;- getwd()");
      engine.Evaluate("dd$ensemble &lt;- '" +name + "'");

      engine.Evaluate("Time$Day &lt;- " + day);
      engine.Evaluate("Time$Year &lt;-" + year);
      engine.Evaluate("today &lt;- paste0(" + day + ",'-'," + year + ")");

      return engine;
   }

}

</text>
      <Reference>
        <ref type="text" description="Path to assembly:">RDotNet.dll</ref>
      </Reference>
      <Reference name="Reference1">
        <ref type="text" description="Path to assembly:">RDotNet.NativeLibrary.dll</ref>
      </Reference>
      <Reference name="Reference2">
        <ref type="text" description="Path to assembly:">DynamicInterop.dll</ref>
      </Reference>
    </manager2>
		<area name="paddock">
			<soil name="Soil">
				<Comment type="multiedit" description="Comments">ICASA Classification: Unknown</Comment>
				<ASC_Order description="Australian Soil Classification Order" />
				<ASC_Sub-order description="Australian Soil Classification Sub-Order" />
				<SoilType description="Soil description"/>
				<LocalName/>
				<Site>?</Site>
				<NearestTown description="Nearest town"/>
				<Region/>
				<State />
				<Country />
				<NaturalVegetation description="Natural vegetation"/>
				<ApsoilNumber description="Apsoil number" />
				<Latitude description="Latitude (WGS84)">?</Latitude>
				<Longitude>?</Longitude>
				<LocationAccuracy description="Location accuracy" />
				<DataSource type="multiedit" description="Data source">GSDE</DataSource>
				<Comments />
				<Water>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.41267</BD>
						<AirDry units="mm/mm">0.0834125</AirDry>
						<LL15 units="mm/mm">0.13</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.4</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.41421</BD>
						<AirDry units="mm/mm">0.0827935</AirDry>
						<LL15 units="mm/mm">0.16</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.4</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.42024</BD>
						<AirDry units="mm/mm">0.0828035</AirDry>
						<LL15 units="mm/mm">0.13</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.44</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.4443</BD>
						<AirDry units="mm/mm">0.083667</AirDry>
						<LL15 units="mm/mm">0.2</LL15>
						<DUL units="mm/mm">0.32</DUL>
						<SAT units="mm/mm">0.43</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.49911</BD>
						<AirDry units="mm/mm">0.0831325</AirDry>
						<LL15 units="mm/mm">0.19</LL15>
						<DUL units="mm/mm">0.28</DUL>
						<SAT units="mm/mm">0.42</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.5869</BD>
						<AirDry units="mm/mm">0.082538</AirDry>
						<LL15 units="mm/mm">0.17</LL15>
						<DUL units="mm/mm">0.31</DUL>
						<SAT units="mm/mm">0.39</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.64563</BD>
						<AirDry units="mm/mm">0.0729415</AirDry>
						<LL15 units="mm/mm">0.14</LL15>
						<DUL units="mm/mm">0.26</DUL>
						<SAT units="mm/mm">0.33</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.65617</BD>
						<AirDry units="mm/mm">0.060723</AirDry>
						<LL15 units="mm/mm">0.08</LL15>
						<DUL units="mm/mm">0.26</DUL>
						<SAT units="mm/mm">0.33</SAT>
					</Layer>
					<SoilCrop name="Maize">

						<Layer>
							<Thickness units="mm">45.0</Thickness>
							<LL units="mm/mm">0.13</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">46.0</Thickness>
							<LL units="mm/mm">0.16</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">75.0</Thickness>
							<LL units="mm/mm">0.13</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">123.0</Thickness>
							<LL units="mm/mm">0.2</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">204.0</Thickness>
							<LL units="mm/mm">0.19</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">336.0</Thickness>
							<LL units="mm/mm">0.17</LL>
							<KL units="/day">0.0647333333333</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">554.0</Thickness>
							<LL units="mm/mm">0.14</LL>
							<KL units="/day">0.0478</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">913.0</Thickness>
							<LL units="mm/mm">0.08</LL>
							<KL units="/day">0.02</KL>
							<XF units="0-1">1</XF>
						</Layer>
					</SoilCrop>
				</Water>
				<SoilWat>
					<SummerCona>3.5</SummerCona>
					<SummerU>5.90435</SummerU>
               <SummerDate>1-Nov</SummerDate>
					<WinterCona>3.5</WinterCona>
					<WinterU>5.90435</WinterU>
               <WinterDate>1-Apr</WinterDate>
					<DiffusConst>40</DiffusConst>
					<DiffusSlope>16</DiffusSlope>
					<Salb>0.102391</Salb>
					<Cn2Bare>74.5217</Cn2Bare>
					<CnRed>20</CnRed>
					<CnCov>0.8</CnCov>
					<Slope>
					</Slope>
					<DischargeWidth>
					</DischargeWidth>
					<CatchmentArea>
					</CatchmentArea>
					<MaxPond>
					</MaxPond>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>
				</SoilWat>
				<SoilOrganicMatter>
					<RootCn>45</RootCn>
					<RootWt>500</RootWt>
					<SoilCn>14.5</SoilCn>
					<EnrACoeff>7.4</EnrACoeff>
					<EnrBCoeff>0.2</EnrBCoeff>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<OC units="Total %"> 2.38 </OC>
						<FBiom units="0-1">0.04</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<OC units="Total %"> 2.34 </OC>
						<FBiom units="0-1">0.0357142857143</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<OC units="Total %"> 2.37 </OC>
						<FBiom units="0-1">0.0314285714286</FBiom>
						<FInert units="0-1">0.410666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<OC units="Total %"> 2.12 </OC>
						<FBiom units="0-1">0.0271428571429</FBiom>
						<FInert units="0-1">0.492666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<OC units="Total %"> 1.28 </OC>
						<FBiom units="0-1">0.0228571428571</FBiom>
						<FInert units="0-1">0.628666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<OC units="Total %"> 0.76 </OC>
						<FBiom units="0-1">0.0185714285714</FBiom>
						<FInert units="0-1">0.890833333333</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<OC units="Total %"> 0.36 </OC>
						<FBiom units="0-1">0.0142857142857</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<OC units="Total %"> 0.43 </OC>
						<FBiom units="0-1">0.01</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>
				</SoilOrganicMatter>
				<Analysis>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.44928</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.44928</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.42135</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.35321</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.22821</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.18301</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.66016</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">7.15399</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>
				</Analysis>
				<Sample name="Initial nitrogen">
					<Date type="date" description="Sample date:">01/01/2005</Date>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<NO3 units="ppm">2.38</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<NO3 units="ppm">2.34</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<NO3 units="ppm">2.37</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<NO3 units="ppm">2.12</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<NO3 units="ppm">1.28</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<NO3 units="ppm">0.76</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<NO3 units="ppm">0.36</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<NO3 units="ppm">0.43</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>
				</Sample>
        		      <InitialWater>
           		      	      <FractionFull>0.5</FractionFull>
          			      <DepthWetSoil>NaN</DepthWetSoil>
           			      <PercentMethod>EvenlyDistributed</PercentMethod>
          			      <RelativeTo>ll15</RelativeTo>
        		      </InitialWater>
			</soil>
			<surfaceom name="SurfaceOrganicMatter">
				<PoolName type="text" description="Organic Matter pool name">OrganicMatter</PoolName>
				<type type="list" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,wheat" description="Organic Matter type">Maize</type>
				<mass type="text" description="Initial surface residue (kg/ha)">500</mass>
				<cnr type="text" description="C:N ratio of initial residue">80.0</cnr>
				<standing_fraction type="text" description="Fraction of residue standing">0</standing_fraction>
			</surfaceom>
			<fertiliser />
      <irrigation name="Irrigation">
        <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">off</automatic_irrigation>
        <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
        <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.75</crit_fr_asw>
        <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
        <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
        <allocation type="text" description="Allocation in mm">10</allocation>
        <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
        <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
        <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
      </irrigation>
      <Maize>
            <ini>
               <filename>Maize.xml</filename>
            </ini>
      </Maize>
			<folder name="Manager folder">
				<operations name="Operations">
				</operations>
        <manager name="Reset">
          <ui>
            <category type="category" description="When should a reset be done" />
            <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">1-jan</reset_date>
            <category type="category" description="Reset details" />
            <soilmodule type="modulename" description="Name of your soil module : ">Soil</soilmodule>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
            <resetWater type="yesno" description="Reset soil water?">no</resetWater>
            <resetNitrogen type="yesno" description="Reset soil nitrogen?">no</resetNitrogen>
            <resetSurfaceOM type="yesno" description="Reset surface organic matter?">no</resetSurfaceOM>
          </ui>
          <script>
            <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            act_mods reseting
         endif
      </text>
            <event>start_of_day</event>
          </script>
        </manager>
  <manager name="Sow on a fixed date">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date type="text" description="Enter sowing date (dd-mmm) : ">1-may</date>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">Maize</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">9</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">B_105_biochar</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">700</row_spacing>
          </ui>
          <script>
            <text>
        if (today = date('[date]') then
              planting_date=dd_mmm_yyyy
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
            <event>start_of_day</event>
          </script>
        </manager>

        <manager name="Fertilise N at sowing">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">Maize</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">100</fert_amount_sow>
            <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">NH4NO3</fert_type_sow>
          </ui>
          <script>
            <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = [fert_depth] (mm), type = [fert_type_sow]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
        </manager>
        <manager name="Fertilise on DAS">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which crop is fertiliser being applied : ">Maize</modulename>
            <fert_das type="text" description="Enter fertiliser days after sowing  : ">45</fert_das>
            <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">100</fert_criteria>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NH4NO3</fert_type>
          </ui>
          <script>
            <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            '[fertmodule]' apply amount = [fert_criteria] (kg/ha), depth = [fert_depth] (mm), type = [fert_type] ()
         endif </text>
            <event>start_of_day</event>
          </script>
        </manager>
        <manager name="Harvesting rule">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
          </ui>
          <script>
            <text>if [crop].StageName = 'harvest_ripe'  or [crop].plant_status = 'dead' then
   [crop] harvest
   [crop] end_crop
endif
</text>
            <event>end_of_day</event>
          </script>
        </manager>
        <manager name="End crop on a fixed date">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
            <date type="text" description="Enter ending date (dd-mmm) : ">1-nov</date>
          </ui>
          <script>
            <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
            <event>end_of_day</event>
          </script>
        </manager>
			</folder>
		</area>
	</simulation>
  
	<simulation name="Generic">
		<memo name="LOG"></memo>
		<clock>
			<start_date type="date" description="Enter the start date of the simulation">01/01/2005</start_date>
			<end_date type="date" description="Enter the end date of the simulation">31/12/2018</end_date>
		</clock>
		<metfile name="met">
			<filename name="filename" input="yes">met00000.met</filename>
		</metfile>
		<summaryfile />
		 <manager2 name="Script(C#)" enabled="yes">
      <ui>
        <A type="text" description="Param A">Parameter value</A>
      </ui>
      <text>using RDotNet;

using RDotNet;
using RDotNet.Internals.Unix;
using RDotNet.NativeLibrary;
using RDotNet.Internals;
using RDotNet.Devices;
using RDotNet.Dynamic;
using RDotNet.Devices;
using RDotNet.Diagnostics;
using RDotNet.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ModelFramework;
using System.ComponentModel;


public class Script
{
   [Link()] public Simulation MySimulation;
   public REngine engine = REngine.GetInstance();

   [Input] double day;
   [Input] double year;
   public Clock ck;

   // Customizable settings for run (1 and 0)
   double free = 1;
   double miyoshi = 1;
   double p = 0.05;
   double Rcov = 0; // 0 == R is diagonal matrix, independent observation errors

   // The following event handler will be called once at the beginning of the simulation
   [EventHandler] public void OnInitialised(){

      engine = Initialize(engine,  MySimulation, miyoshi, p, Rcov);

   }

   [EventHandler] public void OnPost(){

      // initialize some variables
      engine.Evaluate("specL &lt;- NULL");

      // loop through paddocks to collect info from forecast
      foreach (Paddock paddock in MySimulation.ChildPaddocks) {

         object soil = paddock.LinkByType("SoilWat");
         object soiln = paddock.LinkByType("SoilN");

         ModelFramework.Component crop = paddock.Crops[0];

         // RTM function
         engine = RTM_runner(engine, crop, ((SoilWat) soil), 20);

         // gathering information on this day's forecast
         engine = date_info(engine, day, year, MySimulation.Variable("Title").ToString());

         // reading forecast from model outputs for the day
         engine = get_model_results(engine, crop, ((SoilWat) soil), ((SoilN) soiln));

      } // end collection for each paddock


      // save CSV file if simulation is over
      if(ck.is_end_simulation){

         engine.Evaluate("write.csv(data.all, file = 'dailyOutput_"+MySimulation.Variable("Title").ToString()+".csv', row.names = FALSE)");

         engine.Dispose();

         //Console.WriteLine("ck.is_end_simulation: Type is {0}", ck.is_end_simulation.GetType());

      }

   } // End onPost()

   // Function to initialize some variables for simulation and storage
   public REngine Initialize(REngine engine, Simulation MySimulation,double miyoshi,double p,double Rcov){

      engine.Evaluate("miyoshi &lt;- " + miyoshi);
      engine.Evaluate("p &lt;- " + p);
      engine.Evaluate("Rcov &lt;- " + Rcov);

      ck = (Clock) MySimulation.LinkByName("clock");
      engine.Initialize(); // required since v1.5
      engine.Evaluate("library(hsdar)");
      engine.Evaluate("library(dplyr)");

      // defining variables for storage
      engine.Evaluate("data.all &lt;- NULL;SDA.out &lt;- list();Forecast &lt;- list(Q=NULL);Observed &lt;- list();Time &lt;- list()");
      engine.Evaluate("X &lt;- NULL;DAR &lt;- NULL;dd &lt;- NULL;R &lt;- NULL;theta &lt;- NULL");



      return engine;
   }


   // function to write adjusted values back into the model for the next forecast
   public void write_back(REngine engine, Simulation MySimulation, string[] statVars, string[] set_modules, string[] set_names,GenericVector DAResult){

      // loop over stat variables that are going to be assimilated
      for (int i = 0; i &lt; statVars.Length; i++) {

         // read the result for the first state variables
         var tmp_res = DAResult[statVars[i]].AsDataFrame();
         engine.SetSymbol("tmp_res", tmp_res);

         // now loop over ensembles and write the adjusted variables back to the model
         for (int j = 0; j &lt; MySimulation.ChildPaddocks.Count; j++) {

            // subset a row for each ensemble
            double[] row = engine.Evaluate("as.numeric(unlist(tmp_res[" + (j + 1) + ",])) ").AsNumeric().ToArray();

            Paddock paddock_set = MySimulation.ChildPaddocks[j];

            // set values based on their module
            if (set_modules[i] == "SoilN"){
               object soil_set1 = paddock_set.LinkByType("SoilN");
               ((SoilN) soil_set1).Set(set_names[i], row);

            }else if (set_modules[i] == "SoilWat"){
               object soil_set2 = paddock_set.LinkByType("SoilWat");
               ((SoilWat) soil_set2).Set(set_names[i], row);

            }
         }
      }
   }

   // function to collet model forecast results for the current time step
   public REngine get_model_results(REngine engine, ModelFramework.Component crop, SoilWat soilwc, SoilN soiln){

      // ------- Crop variables
      string[] out_vars = {"biomass","lai","yield", "swdef_photo"};
      foreach(string out_var in out_vars){
         double tmp_out = 0;
         crop.Get(out_var, out tmp_out);
         engine.Evaluate("dd$" + out_var + "&lt;-" + Math.Round(tmp_out, 2));
      }

      // ------- Soil state variables
      // Loop through all the layers and collect info on all variables

      for (int i = 0; i &lt; soilwc.dlayer.Length; i++) {

         // ------- soil temp
         engine.Evaluate("dd$st"+(i+1)+" &lt;- " + Math.Round(soiln.st[i], 2));

         // ------- soil water
         engine.Evaluate("dd$sw"+(i+1)+" &lt;- " + Math.Round(soilwc.sw[i], 2));

         // ------- soil no3
         engine.Evaluate("dd$no3_"+(i+1)+" &lt;- " + Math.Round(soiln.no3[i], 2));

				 // ------- soil no3
         engine.Evaluate("dd$oc_"+(i+1)+" &lt;- " + Math.Round(soiln.oc[i], 2));

         // ------- soil nh4
         //engine.Evaluate("dd$nh4_"+(i+1)+" &lt;- " + Math.Round(soiln.nh4[i], 2));

         // ------- total soil N
         //engine.Evaluate("dd$ntot_"+(i+1)+" &lt;- " + Math.Round(soiln.nit_tot[i], 2));

         // ------- N mineralization rates
         //engine.Evaluate("dd$nmin_"+(i+1)+" &lt;- " + Math.Round(soiln.dlt_n_min_tot[i], 2));

         // ------- soil saturated conductivity
        // engine.Evaluate("dd$ks" + (i + 1) + " &lt;- " + Math.Round(soilwc.ks[i], 2));

         // ------- soil bulk density
      //   engine.Evaluate("dd$bd" + (i + 1) + " &lt;- " + Math.Round(soilwc.bd[i], 2));

         // ------- soil saturated water flow conductivity
        // engine.Evaluate("dd$swcon" + (i + 1) + " &lt;- " + Math.Round(soilwc.swcon[i], 2));
      }

      engine.Evaluate("dd$drain &lt;- " + soilwc.drain);

      // adding info to simulation storage variables
      engine.Evaluate("dd &lt;- as.data.frame(dd)");
      engine.Evaluate("data.all &lt;- rbind(data.all, dd)");

      return engine;
   }

   // Function that couples APSIM with RTM model
   public REngine RTM_runner(REngine engine, ModelFramework.Component crop, SoilWat soilwc, int n){

      // initialize storage variables
      double lai_tmp;
      double biomass;
      double yieldc;
      double LeafGreenNConc = 0;
      double drain = 0;
      double LeafGreenWt = 0;
      double GPLA = 0;
      double biomass_wt = 0;

      // extract variables for RTM model
      crop.Get("lai", out lai_tmp);
      crop.Get("yield", out yieldc);
      crop.Get("biomass", out biomass);
      crop.Get("LeafGreenNConc", out LeafGreenNConc);
      crop.Get("LeafGreenWt", out LeafGreenWt);
      crop.Get("TPLA", out GPLA);
      crop.Get("biomass_wt", out biomass_wt);

      // estimating values for RTM model
      engine.Evaluate("sla &lt;-" + lai_tmp * 10 / (LeafGreenWt));

      // PROSAIL function will break if sla is Inf (aka if LeafGreenWt is 0)
      if (LeafGreenWt &gt; 0){
         engine.Evaluate("lai_tmp &lt;-" + lai_tmp);
         engine.Evaluate("psoil &lt;-" + soilwc.sw[1] / soilwc.sat[1]);

         // https://www.sciencedirect.com/science/article/pii/S0303243413000469
         engine.Evaluate("cab &lt;-" + ((LeafGreenNConc * LeafGreenWt) - 0.2057) / 10);
         engine.Evaluate("car &lt;- cab/4.11");
         engine.Evaluate(@"n &lt;- " + n +@"
            parameter &lt;- data.frame(N =(0.025 + (0.9*sla))/(sla-0.1),
            LAI = " + lai_tmp + @",
            Cab=cab,
            Car=car,
            Cw=runif(n,0.01,0.03),
            Cm=(1/sla/1000),
            Cbrown=runif(n,0.01,0.99),
            hspot=runif(n,0.01,.2),
            psoil=psoil
            )");

         engine.Evaluate("spectra &lt;- hsdar::PROSAIL(parameterList = parameter)");
         engine.Evaluate("temp &lt;- data.frame(vegindex(spectra, index=c('NDVI','OSAVI','EVI','Green NDVI', 'MSAVI','NDVI3')))");
         engine.Evaluate(@"dd &lt;- apply(temp, 2, mean)");
      } else{

         // here we have to add empty values so the row is the correct length
         engine.Evaluate("spectra &lt;- NULL");
         engine.Evaluate(@"dd &lt;- list(NDVI = 0, OSAVI = 0, EVI = 0, `Green NDVI`= 0, MSAVI = 0, NDVI3 = 0)");
      }

      engine.Evaluate("specL &lt;- c(specL, spectra) ");
      return engine;
   }

   // Function to get information for this time step
   public REngine date_info(REngine engine, double day, double year, string name){

      NumericVector dateinfo = engine.CreateNumericVector(new double[] {day, year});
      engine.SetSymbol("dateinfo", dateinfo);
      engine.Evaluate("dd$day &lt;-" + day);
      engine.Evaluate("dd$year &lt;-" + year);
      engine.Evaluate("dd$sim &lt;- getwd()");
      engine.Evaluate("dd$ensemble &lt;- '" +name + "'");

      engine.Evaluate("Time$Day &lt;- " + day);
      engine.Evaluate("Time$Year &lt;-" + year);
      engine.Evaluate("today &lt;- paste0(" + day + ",'-'," + year + ")");

      return engine;
   }

}

</text>
      <Reference>
        <ref type="text" description="Path to assembly:">RDotNet.dll</ref>
      </Reference>
      <Reference name="Reference1">
        <ref type="text" description="Path to assembly:">RDotNet.NativeLibrary.dll</ref>
      </Reference>
      <Reference name="Reference2">
        <ref type="text" description="Path to assembly:">DynamicInterop.dll</ref>
      </Reference>
    </manager2>
		<area name="paddock">
			<soil name="Soil">
				<Comment type="multiedit" description="Comments">ICASA Classification: Unknown</Comment>
				<ASC_Order description="Australian Soil Classification Order" />
				<ASC_Sub-order description="Australian Soil Classification Sub-Order" />
				<SoilType description="Soil description"/>
				<LocalName/>
				<Site>?</Site>
				<NearestTown description="Nearest town"/>
				<Region/>
				<State />
				<Country />
				<NaturalVegetation description="Natural vegetation"/>
				<ApsoilNumber description="Apsoil number" />
				<Latitude description="Latitude (WGS84)">?</Latitude>
				<Longitude>?</Longitude>
				<LocationAccuracy description="Location accuracy" />
				<DataSource type="multiedit" description="Data source">GSDE</DataSource>
				<Comments />
				<Water>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.39672</BD>
						<AirDry units="mm/mm">0.090486</AirDry>
						<LL15 units="mm/mm">0.24</LL15>
						<DUL units="mm/mm">0.38</DUL>
						<SAT units="mm/mm">0.4</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.49295</BD>
						<AirDry units="mm/mm">0.0910395</AirDry>
						<LL15 units="mm/mm">0.18</LL15>
						<DUL units="mm/mm">0.34</DUL>
						<SAT units="mm/mm">0.42</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.48965</BD>
						<AirDry units="mm/mm">0.0930985</AirDry>
						<LL15 units="mm/mm">0.18</LL15>
						<DUL units="mm/mm">0.35</DUL>
						<SAT units="mm/mm">0.45</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.48965</BD>
						<AirDry units="mm/mm">0.0930985</AirDry>
						<LL15 units="mm/mm">0.16</LL15>
						<DUL units="mm/mm">0.36</DUL>
						<SAT units="mm/mm">0.48</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.55271</BD>
						<AirDry units="mm/mm">0.096227</AirDry>
						<LL15 units="mm/mm">0.22</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.43</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.60117</BD>
						<AirDry units="mm/mm">0.096355</AirDry>
						<LL15 units="mm/mm">0.2</LL15>
						<DUL units="mm/mm">0.36</DUL>
						<SAT units="mm/mm">0.45</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.64153</BD>
						<AirDry units="mm/mm">0.08919</AirDry>
						<LL15 units="mm/mm">0.2</LL15>
						<DUL units="mm/mm">0.33</DUL>
						<SAT units="mm/mm">0.44</SAT>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<KS units="mm/day" />
						<BD units="g/cc">1.64153</BD>
						<AirDry units="mm/mm">0.08919</AirDry>
						<LL15 units="mm/mm">0.22</LL15>
						<DUL units="mm/mm">0.35</DUL>
						<SAT units="mm/mm">0.43</SAT>
					</Layer>
					<SoilCrop name="Maize">

						<Layer>
							<Thickness units="mm">45.0</Thickness>
							<LL units="mm/mm">0.24</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">46.0</Thickness>
							<LL units="mm/mm">0.18</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">75.0</Thickness>
							<LL units="mm/mm">0.18</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">123.0</Thickness>
							<LL units="mm/mm">0.16</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">204.0</Thickness>
							<LL units="mm/mm">0.22</LL>
							<KL units="/day">0.08</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">336.0</Thickness>
							<LL units="mm/mm">0.2</LL>
							<KL units="/day">0.0647333333333</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">554.0</Thickness>
							<LL units="mm/mm">0.2</LL>
							<KL units="/day">0.0478</KL>
							<XF units="0-1">1</XF>
						</Layer>

						<Layer>
							<Thickness units="mm">913.0</Thickness>
							<LL units="mm/mm">0.22</LL>
							<KL units="/day">0.02</KL>
							<XF units="0-1">1</XF>
						</Layer>
					</SoilCrop>
				</Water>
				<SoilWat>
					<SummerCona>3.5</SummerCona>
					<SummerU>5.90435</SummerU>
               <SummerDate>1-Nov</SummerDate>
					<WinterCona>3.5</WinterCona>
					<WinterU>5.90435</WinterU>
               <WinterDate>1-Apr</WinterDate>
					<DiffusConst>40</DiffusConst>
					<DiffusSlope>16</DiffusSlope>
					<Salb>0.102391</Salb>
					<Cn2Bare>74.5217</Cn2Bare>
					<CnRed>20</CnRed>
					<CnCov>0.8</CnCov>
					<Slope>
					</Slope>
					<DischargeWidth>
					</DischargeWidth>
					<CatchmentArea>
					</CatchmentArea>
					<MaxPond>
					</MaxPond>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<SWCON units="0-1">0.3</SWCON>
						<MWCON units="0-1" />
						<KLAT units="mm/d" />
					</Layer>
				</SoilWat>
				<SoilOrganicMatter>
					<RootCn>45</RootCn>
					<RootWt>500</RootWt>
					<SoilCn>14.5</SoilCn>
					<EnrACoeff>7.4</EnrACoeff>
					<EnrBCoeff>0.2</EnrBCoeff>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<OC units="Total %"> 3.27 </OC>
						<FBiom units="0-1">0.04</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<OC units="Total %"> 2.68 </OC>
						<FBiom units="0-1">0.0357142857143</FBiom>
						<FInert units="0-1">0.4</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<OC units="Total %"> 1.74 </OC>
						<FBiom units="0-1">0.0314285714286</FBiom>
						<FInert units="0-1">0.410666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<OC units="Total %"> 1.74 </OC>
						<FBiom units="0-1">0.0271428571429</FBiom>
						<FInert units="0-1">0.492666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<OC units="Total %"> 1.13 </OC>
						<FBiom units="0-1">0.0228571428571</FBiom>
						<FInert units="0-1">0.628666666667</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<OC units="Total %"> 0.27 </OC>
						<FBiom units="0-1">0.0185714285714</FBiom>
						<FInert units="0-1">0.890833333333</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<OC units="Total %"> 0.26 </OC>
						<FBiom units="0-1">0.0142857142857</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<OC units="Total %"> 0.37 </OC>
						<FBiom units="0-1">0.01</FBiom>
						<FInert units="0-1">0.95</FInert>
					</Layer>
				</SoilOrganicMatter>
				<Analysis>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.17768</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.14965</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.07985</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.07985</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.05539</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.24542</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.84574</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<Rocks units="%" />
						<Texture/>
						<MunsellColour/>
						<EC units="1:5 dS/m"/>
						<PH units="1:5 water">6.84574</PH>
						<CL units="mg/kg" />
						<Boron units="Hot water mg/kg" />
						<CEC units="cmol+/kg" />
						<Ca units="cmol+/kg" />
						<Mg units="cmol+/kg" />
						<Na units="cmol+/kg" />
						<K units="cmol+/kg" />
						<ESP units="%" />
						<Mn units="mg/kg" />
						<Al units="cmol+/kg" />
						<ParticleSizeSand units="%" />
						<ParticleSizeSilt units="%" />
						<ParticleSizeClay units="%" />
					</Layer>
				</Analysis>
				<Sample name="Initial nitrogen">
					<Date type="date" description="Sample date:">01/01/2005</Date>

					<Layer>
						<Thickness units="mm">45.0</Thickness>
						<NO3 units="ppm">3.27</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">46.0</Thickness>
						<NO3 units="ppm">2.68</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">75.0</Thickness>
						<NO3 units="ppm">1.74</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">123.0</Thickness>
						<NO3 units="ppm">1.74</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">204.0</Thickness>
						<NO3 units="ppm">1.13</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">336.0</Thickness>
						<NO3 units="ppm">0.27</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">554.0</Thickness>
						<NO3 units="ppm">0.26</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>

					<Layer>
						<Thickness units="mm">913.0</Thickness>
						<NO3 units="ppm">0.37</NO3>
						<NH4 units="ppm">.1</NH4>
					</Layer>
				</Sample>
        		      <InitialWater>
           		      	      <FractionFull>0.5</FractionFull>
          			      <DepthWetSoil>NaN</DepthWetSoil>
           			      <PercentMethod>EvenlyDistributed</PercentMethod>
          			      <RelativeTo>ll15</RelativeTo>
        		      </InitialWater>
			</soil>
			<surfaceom name="SurfaceOrganicMatter">
				<PoolName type="text" description="Organic Matter pool name">OrganicMatter</PoolName>
				<type type="list" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,wheat" description="Organic Matter type">Maize</type>
				<mass type="text" description="Initial surface residue (kg/ha)">500</mass>
				<cnr type="text" description="C:N ratio of initial residue">80.0</cnr>
				<standing_fraction type="text" description="Fraction of residue standing">0</standing_fraction>
			</surfaceom>
			<fertiliser />
      <irrigation name="Irrigation">
        <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">off</automatic_irrigation>
        <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
        <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.75</crit_fr_asw>
        <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
        <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
        <allocation type="text" description="Allocation in mm">10</allocation>
        <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
        <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
        <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
      </irrigation>
      <Maize>
            <ini>
               <filename>Maize.xml</filename>
            </ini>
      </Maize>
			<folder name="Manager folder">
				<operations name="Operations">
				</operations>
        <manager name="Reset">
          <ui>
            <category type="category" description="When should a reset be done" />
            <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">1-jan</reset_date>
            <category type="category" description="Reset details" />
            <soilmodule type="modulename" description="Name of your soil module : ">Soil</soilmodule>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
            <resetWater type="yesno" description="Reset soil water?">no</resetWater>
            <resetNitrogen type="yesno" description="Reset soil nitrogen?">no</resetNitrogen>
            <resetSurfaceOM type="yesno" description="Reset surface organic matter?">no</resetSurfaceOM>
          </ui>
          <script>
            <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            act_mods reseting
         endif
      </text>
            <event>start_of_day</event>
          </script>
        </manager>
  <manager name="Sow on a fixed date">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date type="text" description="Enter sowing date (dd-mmm) : ">1-may</date>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">Maize</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">9</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">B_105_biochar</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">700</row_spacing>
          </ui>
          <script>
            <text>
        if (today = date('[date]') then
              planting_date=dd_mmm_yyyy
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
            <event>start_of_day</event>
          </script>
        </manager>

        <manager name="Fertilise N at sowing">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">Maize</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">100</fert_amount_sow>
            <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">NH4NO3</fert_type_sow>
          </ui>
          <script>
            <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = [fert_depth] (mm), type = [fert_type_sow]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
        </manager>
        <manager name="Fertilise on DAS">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which crop is fertiliser being applied : ">Maize</modulename>
            <fert_das type="text" description="Enter fertiliser days after sowing  : ">45</fert_das>
            <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">100</fert_criteria>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_depth type="text" description="fert_depth">40</fert_depth>
            <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NH4NO3</fert_type>
          </ui>
          <script>
            <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            '[fertmodule]' apply amount = [fert_criteria] (kg/ha), depth = [fert_depth] (mm), type = [fert_type] ()
         endif </text>
            <event>start_of_day</event>
          </script>
        </manager>
        <manager name="Harvesting rule">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
          </ui>
          <script>
            <text>if [crop].StageName = 'harvest_ripe'  or [crop].plant_status = 'dead' then
   [crop] harvest
   [crop] end_crop
endif
</text>
            <event>end_of_day</event>
          </script>
        </manager>
        <manager name="End crop on a fixed date">
          <ui>
            <category type="category" description="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">Maize</crop>
            <date type="text" description="Enter ending date (dd-mmm) : ">1-nov</date>
          </ui>
          <script>
            <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
            <event>end_of_day</event>
          </script>
        </manager>
			</folder>
		</area>
	</simulation>
  </folder>
